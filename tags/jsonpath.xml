<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Louis Tiao (jsonpath)</title><link>http://louistiao.me/</link><description></description><atom:link rel="self" href="http://louistiao.me/tags/jsonpath.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Thu, 24 Nov 2016 01:27:39 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Deploy Flask with a Celery task queue and Flower dashboard using Kubernetes</title><link>http://louistiao.me/posts/deploy-flask-with-a-celery-task-queue-and-flower-dashboard-using-kubernetes/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;In this article, we walkthrough the steps to deploy a simple &lt;a class="reference external" href="http://flask.pocoo.org/"&gt;Flask&lt;/a&gt; app
integrated with &lt;a class="reference external" href="http://www.celeryproject.org/"&gt;Celery&lt;/a&gt;, an asynchronous task queue based on message passing. It
makes uses &lt;a class="reference external" href="https://www.rabbitmq.com/"&gt;RabbitMQ&lt;/a&gt; and/or &lt;a class="reference external" href="http://redis.io/"&gt;Redis&lt;/a&gt; as the message broker and results backend,
which can be cumbersome to provision and orchestrate. We use &lt;a class="reference external" href="http://kubernetes.io/"&gt;Kubernetes&lt;/a&gt; to
ease the management of the various deployments and services required in our
stack, which leaves us more time to focus on coding and less on DevOps.&lt;/p&gt;
&lt;img alt="../../images/rq-dashboard.png" class="align-center" src="http://louistiao.me/images/rq-dashboard.png"&gt;
&lt;p&gt;&lt;a href="http://louistiao.me/posts/deploy-flask-with-a-celery-task-queue-and-flower-dashboard-using-kubernetes/"&gt;Read more…&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>celery</category><category>docker</category><category>flask</category><category>flower</category><category>jsonpath</category><category>kubernetes</category><category>rabbitmq</category><category>redis</category><category>yaml</category><guid>http://louistiao.me/posts/deploy-flask-with-a-celery-task-queue-and-flower-dashboard-using-kubernetes/</guid><pubDate>Tue, 16 Aug 2016 02:09:47 GMT</pubDate></item><item><title>Walkthrough: Deploying a Flask app with Redis Queue (RQ) Workers and Dashboard using Kubernetes</title><link>http://louistiao.me/posts/walkthrough-deploying-a-flask-app-with-redis-queue-rq-workers-and-dashboard-using-kubernetes/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;In this article, we walkthrough the steps to deploy a simple &lt;a class="reference external" href="http://flask.pocoo.org/"&gt;Flask&lt;/a&gt; app together
with &lt;a class="reference external" href="http://python-rq.org/"&gt;Redis Queue (RQ)&lt;/a&gt;, a minimalistic job queue built on &lt;a class="reference external" href="http://redis.io/"&gt;Redis&lt;/a&gt;, using
&lt;a class="reference external" href="http://kubernetes.io/"&gt;Kubernetes&lt;/a&gt; to provision and manage the necessary deployments and services for
our stack.&lt;/p&gt;
&lt;img alt="../../images/rq-dashboard.png" class="align-center" src="http://louistiao.me/images/rq-dashboard.png"&gt;
&lt;p&gt;&lt;a href="http://louistiao.me/posts/walkthrough-deploying-a-flask-app-with-redis-queue-rq-workers-and-dashboard-using-kubernetes/"&gt;Read more…&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>docker</category><category>flask</category><category>jsonpath</category><category>kubernetes</category><category>redis</category><category>rq</category><category>yaml</category><guid>http://louistiao.me/posts/walkthrough-deploying-a-flask-app-with-redis-queue-rq-workers-and-dashboard-using-kubernetes/</guid><pubDate>Fri, 01 Jul 2016 04:12:07 GMT</pubDate></item></channel></rss>