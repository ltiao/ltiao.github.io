<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>Louis Tiao (pdf)</title><link>http://louistiao.me/</link><description></description><atom:link href="http://louistiao.me/tags/pdf.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Tue, 02 Feb 2016 23:33:54 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Generating PDFs from Pelican Articles</title><link>http://louistiao.me/posts/generating-pdfs-from-pelican-articles/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;As of mid-2013, Pelican still advertised PDF generation of articles/pages
as one of its &lt;a class="reference external" href="https://github.com/getpelican/pelican/blob/8be7c0dbae5bd094379d74fd47acb41a56f18afd/docs/index.rst#features"&gt;features&lt;/a&gt;. However, the &lt;a class="reference external" href="http://docs.getpelican.com/en/3.5.0/changelog.html#id3"&gt;change log&lt;/a&gt; indicates that this
is no longer a core feature and has since become a Pelican plugin as of
version 3.3.0 (2013-09-24), see &lt;a class="reference external" href="https://github.com/getpelican/pelican/issues/1009"&gt;issue&lt;/a&gt; for further discussion. Therefore, it was
rather confounding to find the setting &lt;tt class="docutils literal"&gt;PDF_GENERATOR&lt;/tt&gt; to be listed in the
&lt;a class="reference external" href="http://docs.getpelican.com/en/3.5.0/settings.html#example-settings"&gt;examples settings&lt;/a&gt; of version 3.5.0, and of course, to no one's surprise,
adding the setting &lt;tt class="docutils literal"&gt;PDF_GENERATOR=True&lt;/tt&gt; isn't going to do anything.&lt;/p&gt;
&lt;p&gt;If you have used &lt;a class="reference external" href="http://docs.getpelican.com/en/3.5.0/plugins.html"&gt;Pelican plugins&lt;/a&gt; before, then the solution should be obvious.
Simply install the &lt;tt class="docutils literal"&gt;pdf&lt;/tt&gt; plugin from &lt;a class="reference external" href="http://docs.getpelican.com/en/3.5.0/plugins.html"&gt;Pelican plugins&lt;/a&gt;. I personally
prefer to keep all plugins (and themes) in the &lt;tt class="docutils literal"&gt;&amp;lt;pelican_site_root&amp;gt;&lt;/tt&gt; directory,
on the same level as the &lt;tt class="docutils literal"&gt;pelicanconf.py&lt;/tt&gt; settings file:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_ad188eabc1554594ad97f4ceb44d9f42-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;pelican_site_root&amp;gt;
&lt;a name="rest_code_ad188eabc1554594ad97f4ceb44d9f42-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; mkdir plugins
&lt;a name="rest_code_ad188eabc1554594ad97f4ceb44d9f42-3"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git clone https://github.com/getpelican/pelican-plugins.git plugins
&lt;/pre&gt;&lt;p&gt;Optionally, you can also add the repository as a submodule:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_92e377a1d86947f983a48fdaec7c0e6a-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git submodule add https://github.com/getpelican/pelican-plugins.git plugins
&lt;/pre&gt;&lt;p&gt;or clone it anywhere else you like for that matter.&lt;/p&gt;
&lt;p&gt;Lastly, you simply need to add &lt;tt class="docutils literal"&gt;plugins&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;PLUGIN_PATHS&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;pdf&lt;/tt&gt;
to &lt;tt class="docutils literal"&gt;PLUGINS&lt;/tt&gt;. The former will temporarily add &lt;tt class="docutils literal"&gt;PLUGIN_PATHS&lt;/tt&gt; to your
system path so that the latter is importable:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_c32d59fa59ab4555b6a631b8c1b5cf83-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'plugins'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_c32d59fa59ab4555b6a631b8c1b5cf83-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'pdf'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;When you run &lt;tt class="docutils literal"&gt;pelican&lt;/tt&gt; (or &lt;tt class="docutils literal"&gt;make html&lt;/tt&gt;), the generated PDFs of your articles
will appear in the &lt;tt class="docutils literal"&gt;pdf&lt;/tt&gt; directory of the output directory, named according
to the article slug with the &lt;tt class="docutils literal"&gt;.pdf&lt;/tt&gt; extension.&lt;/p&gt;
&lt;p&gt;In my opinion, the generated PDFs aren't exactly terrific, and the plugin could
do with a little bit more work.&lt;/p&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;If you happen to be using the &lt;tt class="docutils literal"&gt;notmyidea&lt;/tt&gt; theme, a link &lt;em&gt;get the pdf&lt;/em&gt;
will appear by simply adding &lt;tt class="docutils literal"&gt;PDF_PROCESSOR=True&lt;/tt&gt; to your settings
(as of &lt;a class="reference external" href="https://github.com/getpelican/pelican/blob/a7ca52dee05819be269b95556da01f965d107a50/pelican/themes/notmyidea/templates/taglist.html"&gt;commit a7ca52&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>pdf</category><category>pelican</category><category>python</category><guid>http://louistiao.me/posts/generating-pdfs-from-pelican-articles/</guid><pubDate>Wed, 01 Apr 2015 13:37:26 GMT</pubDate></item></channel></rss>