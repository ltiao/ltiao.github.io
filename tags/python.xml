<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Louis Tiao (python)</title><link>http://louistiao.me/</link><description></description><atom:link rel="self" type="application/rss+xml" href="http://louistiao.me/tags/python.xml"></atom:link><language>en</language><lastBuildDate>Tue, 29 Mar 2016 08:18:11 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Workflow for keeping Nikola config file updated</title><link>http://louistiao.me/posts/workflow-for-keeping-nikola-config-file-updated/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;For most, keeping Nikola up-to-date is usually a simple matter of running
something like:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_09f7bb56a79940f4bab95061c602c5aa-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pip install --upgrade nikola
&lt;/pre&gt;&lt;p&gt;The same goes for its dependencies. However, one important thing that can get
overlooked is the Nikola configuration file for your site (the &lt;tt class="docutils literal"&gt;conf.py&lt;/tt&gt; file
sitting at the root of your Nikola site directory), which is almost always
updated with each major Nikola release.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://louistiao.me/posts/workflow-for-keeping-nikola-config-file-updated/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>meld</category><category>nikola</category><category>pip</category><category>python</category><guid>http://louistiao.me/posts/workflow-for-keeping-nikola-config-file-updated/</guid><pubDate>Tue, 29 Mar 2016 00:13:12 GMT</pubDate></item><item><title>Adding __name__ and __doc__ attributes to functools.partial objects</title><link>http://louistiao.me/posts/adding-__name__-and-__doc__-attributes-to-functoolspartial-objects/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;The &lt;a class="reference external" href="https://docs.python.org/2/library/functools.html#functools.partial"&gt;partial&lt;/a&gt; function from the &lt;a class="reference external" href="https://docs.python.org/2/library/functools.html"&gt;functools&lt;/a&gt; library is useful for performing
partial function application in Python. There are plenty of guides and
resources on functional programming in Python and this post assumes a reasonable
degree of proficiency with both.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://louistiao.me/posts/adding-__name__-and-__doc__-attributes-to-functoolspartial-objects/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>autograd</category><category>functional programming</category><category>functools</category><category>partial function application</category><category>python</category><category>regression</category><guid>http://louistiao.me/posts/adding-__name__-and-__doc__-attributes-to-functoolspartial-objects/</guid><pubDate>Mon, 08 Feb 2016 03:42:56 GMT</pubDate></item><item><title>Python SimpleHTTPServer Recipe: Serve specific directory</title><link>http://louistiao.me/posts/python-simplehttpserver-recipe-serve-specific-directory/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;ul class="simple"&gt;
&lt;li&gt;We need to be able to pass the path to the root of the directory tree we wish
to serve.&lt;/li&gt;
&lt;li&gt;We can only pass arguments to the &lt;tt class="docutils literal"&gt;ServerClass&lt;/tt&gt; and not &lt;tt class="docutils literal"&gt;HandlerClass&lt;/tt&gt;.
Note however that &lt;tt class="docutils literal"&gt;HandlerClass&lt;/tt&gt; is passed as an argument to &lt;tt class="docutils literal"&gt;ServerClass&lt;/tt&gt;
so we should be able to propagate the argument to &lt;tt class="docutils literal"&gt;HandlerClass&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;tt class="docutils literal"&gt;translate_path&lt;/tt&gt; method of &lt;tt class="docutils literal"&gt;SimpleHTTPRequestHandler&lt;/tt&gt; takes the
&lt;tt class="docutils literal"&gt;/&lt;/tt&gt;-separated path specified in the URL and prepends &lt;tt class="docutils literal"&gt;os.getcwd()&lt;/tt&gt; to it.
We just have to instead prepend the  argument we propagated to
&lt;tt class="docutils literal"&gt;SimpleHTTPRequestHandler&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;Lastly we modify the &lt;tt class="docutils literal"&gt;test&lt;/tt&gt; function to take multiple optional arguments
(port and base path) using the excellent module &lt;tt class="docutils literal"&gt;argparse&lt;/tt&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://louistiao.me/posts/python-simplehttpserver-recipe-serve-specific-directory/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>python</category><guid>http://louistiao.me/posts/python-simplehttpserver-recipe-serve-specific-directory/</guid><pubDate>Thu, 10 Dec 2015 06:38:27 GMT</pubDate></item><item><title>Python SimpleHTTPServer Recipe: Enable CORS</title><link>http://louistiao.me/posts/python-simplehttpserver-recipe-enable-cors/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;Create a file, let's call it &lt;tt class="docutils literal"&gt;cors_http_server.py&lt;/tt&gt;, with the code below:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-1"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#! /usr/bin/env python&lt;/span&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;SimpleHTTPServer&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SimpleHTTPRequestHandler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CORSHTTPRequestHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SimpleHTTPRequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;end_headers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-9"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Access-Control-Allow-Origin'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-10"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CORSHTTPRequestHandler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end_headers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-12"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HandlerClass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;CORSHTTPRequestHandler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="http://louistiao.me/posts/python-simplehttpserver-recipe-enable-cors/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cors</category><category>python</category><guid>http://louistiao.me/posts/python-simplehttpserver-recipe-enable-cors/</guid><pubDate>Thu, 10 Dec 2015 04:56:08 GMT</pubDate></item><item><title>Installing lxml on Mac OSX (10.11) inside a virtualenv with pip</title><link>http://louistiao.me/posts/installing-lxml-on-mac-osx-1011-inside-a-virtualenv-with-pip/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;The &lt;tt class="docutils literal"&gt;lxml&lt;/tt&gt; library is a dependency for many popular Python projects such as
Scrapy and Nikola. If you are a Mac OSX user, it's highly likely that you have
encountered the following error when trying to install &lt;tt class="docutils literal"&gt;lxml&lt;/tt&gt; or its
dependants with &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_edbbffc04cb94cb68e13576a0325e90d-1"&gt;&lt;/a&gt;&lt;span class="go"&gt;In file included from src/lxml/lxml.etree.c:346:&lt;/span&gt;
&lt;a name="rest_code_edbbffc04cb94cb68e13576a0325e90d-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt;WORKON_HOME/venv_name/build/lxml/src/lxml/includes/etree_defs.h:9:10: fatal error: &lt;span class="s1"&gt;'libxml/xmlversion.h'&lt;/span&gt; file not found
&lt;a name="rest_code_edbbffc04cb94cb68e13576a0325e90d-3"&gt;&lt;/a&gt;&lt;span class="gp"&gt;#&lt;/span&gt;include &lt;span class="s2"&gt;"libxml/xmlversion.h"&lt;/span&gt;
&lt;a name="rest_code_edbbffc04cb94cb68e13576a0325e90d-4"&gt;&lt;/a&gt;&lt;span class="go"&gt;         ^&lt;/span&gt;
&lt;a name="rest_code_edbbffc04cb94cb68e13576a0325e90d-5"&gt;&lt;/a&gt;&lt;span class="go"&gt;1 error generated.&lt;/span&gt;
&lt;a name="rest_code_edbbffc04cb94cb68e13576a0325e90d-6"&gt;&lt;/a&gt;&lt;span class="go"&gt;error: command 'clang' failed with exit status 1&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="http://louistiao.me/posts/installing-lxml-on-mac-osx-1011-inside-a-virtualenv-with-pip/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>lxml</category><category>mac</category><category>osx</category><category>pip</category><category>python</category><category>virtualenv</category><guid>http://louistiao.me/posts/installing-lxml-on-mac-osx-1011-inside-a-virtualenv-with-pip/</guid><pubDate>Tue, 01 Dec 2015 03:04:57 GMT</pubDate></item><item><title>NumPy mgrid vs. meshgrid</title><link>http://louistiao.me/posts/numpy-mgrid-vs-meshgrid/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;The &lt;a class="reference external" href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.meshgrid.html"&gt;meshgrid&lt;/a&gt; function is useful for creating coordinate arrays to
vectorize function evaluations over a grid. Experienced NumPy users will have
noticed some discrepancy between &lt;tt class="docutils literal"&gt;meshgrid&lt;/tt&gt; and the &lt;a class="reference external" href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.mgrid.html"&gt;mgrid&lt;/a&gt;, a function
that is used just as often, for exactly the same purpose. What is the
discrepancy, and why does a discrepancy even exist when &lt;em&gt;"there should be one
- and preferably only one - obvious way to do it."&lt;/em&gt; &lt;a class="footnote-reference" href="http://louistiao.me/posts/numpy-mgrid-vs-meshgrid/#id2" id="id1"&gt;[1]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;First, recall that &lt;tt class="docutils literal"&gt;meshgrid&lt;/tt&gt; behaves as follows:&lt;/p&gt;
&lt;pre class="code pycon"&gt;&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;meshgrid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-3"&gt;&lt;/a&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;
&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-4"&gt;&lt;/a&gt;&lt;span class="go"&gt;array([[1, 3, 5, 7, 9],&lt;/span&gt;
&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-5"&gt;&lt;/a&gt;&lt;span class="go"&gt;       [1, 3, 5, 7, 9],&lt;/span&gt;
&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-6"&gt;&lt;/a&gt;&lt;span class="go"&gt;       [1, 3, 5, 7, 9]])&lt;/span&gt;
&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-7"&gt;&lt;/a&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;y1&lt;/span&gt;
&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-8"&gt;&lt;/a&gt;&lt;span class="go"&gt;array([[-12, -12, -12, -12, -12],&lt;/span&gt;
&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-9"&gt;&lt;/a&gt;&lt;span class="go"&gt;       [ -9,  -9,  -9,  -9,  -9],&lt;/span&gt;
&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-10"&gt;&lt;/a&gt;&lt;span class="go"&gt;       [ -6,  -6,  -6,  -6,  -6]])&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="http://louistiao.me/posts/numpy-mgrid-vs-meshgrid/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>numpy</category><category>python</category><guid>http://louistiao.me/posts/numpy-mgrid-vs-meshgrid/</guid><pubDate>Fri, 30 Oct 2015 05:00:19 GMT</pubDate></item><item><title>Installing NLOpt with Python support on Mac OS X (10.10)</title><link>http://louistiao.me/posts/installing-nlopt-with-python-support-on-mac-os-x-1010/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a class="reference external" href="http://ab-initio.mit.edu/wiki/index.php/NLopt"&gt;NLOpt&lt;/a&gt; is a popular open-source library for nonlinear optimization. It can be
somewhat tricky to install it with Python support on Mac OS X, especially
isolated under a virtual environment. This article outlines the different ways
of making NLopt play nicely with your Python development environment, whatever
that may be.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://louistiao.me/posts/installing-nlopt-with-python-support-on-mac-os-x-1010/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>homebrew</category><category>nlopt</category><category>optimization</category><category>python</category><category>python3</category><category>virtualenv</category><guid>http://louistiao.me/posts/installing-nlopt-with-python-support-on-mac-os-x-1010/</guid><pubDate>Fri, 17 Jul 2015 05:39:17 GMT</pubDate></item><item><title>Project Euler Problem 42: Coded triangle numbers</title><link>http://louistiao.me/posts/project-euler/problem-42-coded-triangle-numbers/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;The nth term of the sequence of triangle numbers is given by, $T_n = \frac{n(n+1)}{2}$; so the first ten triangle numbers are:&lt;/p&gt;
&lt;p&gt;1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...&lt;/p&gt;
&lt;p&gt;By converting each letter in a word to a number corresponding to its alphabetical position and adding these values we form a word value. For example, the word value for SKY is 19 + 11 + 25 = 55 = $T_{10}$. If the word value is a triangle number then we shall call the word a triangle word.&lt;/p&gt;
&lt;p&gt;Using &lt;a href="http://louistiao.me/posts/p042_words.txt"&gt;words.txt&lt;/a&gt; (right click and 'Save Link/Target As...'), a 16K text file containing nearly two-thousand common English words, how many are triangle words?&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [8]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;csv&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [21]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'../../files/p042_words.txt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;csvfile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csvfile&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [22]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;words&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[22]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;['A',
 'ABILITY',
 'ABLE',
 'ABOUT',
 'ABOVE',
 'ABSENCE',
 'ABSOLUTELY',
 'ACADEMIC',
 'ACCEPT',
 'ACCESS',
 'ACCIDENT',
 'ACCOMPANY',
 'ACCORDING',
 'ACCOUNT',
 'ACHIEVE',
 'ACHIEVEMENT',
 'ACID',
 'ACQUIRE',
 'ACROSS',
 'ACT',
 'ACTION',
 'ACTIVE',
 'ACTIVITY',
 'ACTUAL',
 'ACTUALLY',
 'ADD',
 'ADDITION',
 'ADDITIONAL',
 'ADDRESS',
 'ADMINISTRATION',
 'ADMIT',
 'ADOPT',
 'ADULT',
 'ADVANCE',
 'ADVANTAGE',
 'ADVICE',
 'ADVISE',
 'AFFAIR',
 'AFFECT',
 'AFFORD',
 'AFRAID',
 'AFTER',
 'AFTERNOON',
 'AFTERWARDS',
 'AGAIN',
 'AGAINST',
 'AGE',
 'AGENCY',
 'AGENT',
 'AGO',
 'AGREE',
 'AGREEMENT',
 'AHEAD',
 'AID',
 'AIM',
 'AIR',
 'AIRCRAFT',
 'ALL',
 'ALLOW',
 'ALMOST',
 'ALONE',
 'ALONG',
 'ALREADY',
 'ALRIGHT',
 'ALSO',
 'ALTERNATIVE',
 'ALTHOUGH',
 'ALWAYS',
 'AMONG',
 'AMONGST',
 'AMOUNT',
 'AN',
 'ANALYSIS',
 'ANCIENT',
 'AND',
 'ANIMAL',
 'ANNOUNCE',
 'ANNUAL',
 'ANOTHER',
 'ANSWER',
 'ANY',
 'ANYBODY',
 'ANYONE',
 'ANYTHING',
 'ANYWAY',
 'APART',
 'APPARENT',
 'APPARENTLY',
 'APPEAL',
 'APPEAR',
 'APPEARANCE',
 'APPLICATION',
 'APPLY',
 'APPOINT',
 'APPOINTMENT',
 'APPROACH',
 'APPROPRIATE',
 'APPROVE',
 'AREA',
 'ARGUE',
 'ARGUMENT',
 'ARISE',
 'ARM',
 'ARMY',
 'AROUND',
 'ARRANGE',
 'ARRANGEMENT',
 'ARRIVE',
 'ART',
 'ARTICLE',
 'ARTIST',
 'AS',
 'ASK',
 'ASPECT',
 'ASSEMBLY',
 'ASSESS',
 'ASSESSMENT',
 'ASSET',
 'ASSOCIATE',
 'ASSOCIATION',
 'ASSUME',
 'ASSUMPTION',
 'AT',
 'ATMOSPHERE',
 'ATTACH',
 'ATTACK',
 'ATTEMPT',
 'ATTEND',
 'ATTENTION',
 'ATTITUDE',
 'ATTRACT',
 'ATTRACTIVE',
 'AUDIENCE',
 'AUTHOR',
 'AUTHORITY',
 'AVAILABLE',
 'AVERAGE',
 'AVOID',
 'AWARD',
 'AWARE',
 'AWAY',
 'AYE',
 'BABY',
 'BACK',
 'BACKGROUND',
 'BAD',
 'BAG',
 'BALANCE',
 'BALL',
 'BAND',
 'BANK',
 'BAR',
 'BASE',
 'BASIC',
 'BASIS',
 'BATTLE',
 'BE',
 'BEAR',
 'BEAT',
 'BEAUTIFUL',
 'BECAUSE',
 'BECOME',
 'BED',
 'BEDROOM',
 'BEFORE',
 'BEGIN',
 'BEGINNING',
 'BEHAVIOUR',
 'BEHIND',
 'BELIEF',
 'BELIEVE',
 'BELONG',
 'BELOW',
 'BENEATH',
 'BENEFIT',
 'BESIDE',
 'BEST',
 'BETTER',
 'BETWEEN',
 'BEYOND',
 'BIG',
 'BILL',
 'BIND',
 'BIRD',
 'BIRTH',
 'BIT',
 'BLACK',
 'BLOCK',
 'BLOOD',
 'BLOODY',
 'BLOW',
 'BLUE',
 'BOARD',
 'BOAT',
 'BODY',
 'BONE',
 'BOOK',
 'BORDER',
 'BOTH',
 'BOTTLE',
 'BOTTOM',
 'BOX',
 'BOY',
 'BRAIN',
 'BRANCH',
 'BREAK',
 'BREATH',
 'BRIDGE',
 'BRIEF',
 'BRIGHT',
 'BRING',
 'BROAD',
 'BROTHER',
 'BUDGET',
 'BUILD',
 'BUILDING',
 'BURN',
 'BUS',
 'BUSINESS',
 'BUSY',
 'BUT',
 'BUY',
 'BY',
 'CABINET',
 'CALL',
 'CAMPAIGN',
 'CAN',
 'CANDIDATE',
 'CAPABLE',
 'CAPACITY',
 'CAPITAL',
 'CAR',
 'CARD',
 'CARE',
 'CAREER',
 'CAREFUL',
 'CAREFULLY',
 'CARRY',
 'CASE',
 'CASH',
 'CAT',
 'CATCH',
 'CATEGORY',
 'CAUSE',
 'CELL',
 'CENTRAL',
 'CENTRE',
 'CENTURY',
 'CERTAIN',
 'CERTAINLY',
 'CHAIN',
 'CHAIR',
 'CHAIRMAN',
 'CHALLENGE',
 'CHANCE',
 'CHANGE',
 'CHANNEL',
 'CHAPTER',
 'CHARACTER',
 'CHARACTERISTIC',
 'CHARGE',
 'CHEAP',
 'CHECK',
 'CHEMICAL',
 'CHIEF',
 'CHILD',
 'CHOICE',
 'CHOOSE',
 'CHURCH',
 'CIRCLE',
 'CIRCUMSTANCE',
 'CITIZEN',
 'CITY',
 'CIVIL',
 'CLAIM',
 'CLASS',
 'CLEAN',
 'CLEAR',
 'CLEARLY',
 'CLIENT',
 'CLIMB',
 'CLOSE',
 'CLOSELY',
 'CLOTHES',
 'CLUB',
 'COAL',
 'CODE',
 'COFFEE',
 'COLD',
 'COLLEAGUE',
 'COLLECT',
 'COLLECTION',
 'COLLEGE',
 'COLOUR',
 'COMBINATION',
 'COMBINE',
 'COME',
 'COMMENT',
 'COMMERCIAL',
 'COMMISSION',
 'COMMIT',
 'COMMITMENT',
 'COMMITTEE',
 'COMMON',
 'COMMUNICATION',
 'COMMUNITY',
 'COMPANY',
 'COMPARE',
 'COMPARISON',
 'COMPETITION',
 'COMPLETE',
 'COMPLETELY',
 'COMPLEX',
 'COMPONENT',
 'COMPUTER',
 'CONCENTRATE',
 'CONCENTRATION',
 'CONCEPT',
 'CONCERN',
 'CONCERNED',
 'CONCLUDE',
 'CONCLUSION',
 'CONDITION',
 'CONDUCT',
 'CONFERENCE',
 'CONFIDENCE',
 'CONFIRM',
 'CONFLICT',
 'CONGRESS',
 'CONNECT',
 'CONNECTION',
 'CONSEQUENCE',
 'CONSERVATIVE',
 'CONSIDER',
 'CONSIDERABLE',
 'CONSIDERATION',
 'CONSIST',
 'CONSTANT',
 'CONSTRUCTION',
 'CONSUMER',
 'CONTACT',
 'CONTAIN',
 'CONTENT',
 'CONTEXT',
 'CONTINUE',
 'CONTRACT',
 'CONTRAST',
 'CONTRIBUTE',
 'CONTRIBUTION',
 'CONTROL',
 'CONVENTION',
 'CONVERSATION',
 'COPY',
 'CORNER',
 'CORPORATE',
 'CORRECT',
 'COS',
 'COST',
 'COULD',
 'COUNCIL',
 'COUNT',
 'COUNTRY',
 'COUNTY',
 'COUPLE',
 'COURSE',
 'COURT',
 'COVER',
 'CREATE',
 'CREATION',
 'CREDIT',
 'CRIME',
 'CRIMINAL',
 'CRISIS',
 'CRITERION',
 'CRITICAL',
 'CRITICISM',
 'CROSS',
 'CROWD',
 'CRY',
 'CULTURAL',
 'CULTURE',
 'CUP',
 'CURRENT',
 'CURRENTLY',
 'CURRICULUM',
 'CUSTOMER',
 'CUT',
 'DAMAGE',
 'DANGER',
 'DANGEROUS',
 'DARK',
 'DATA',
 'DATE',
 'DAUGHTER',
 'DAY',
 'DEAD',
 'DEAL',
 'DEATH',
 'DEBATE',
 'DEBT',
 'DECADE',
 'DECIDE',
 'DECISION',
 'DECLARE',
 'DEEP',
 'DEFENCE',
 'DEFENDANT',
 'DEFINE',
 'DEFINITION',
 'DEGREE',
 'DELIVER',
 'DEMAND',
 'DEMOCRATIC',
 'DEMONSTRATE',
 'DENY',
 'DEPARTMENT',
 'DEPEND',
 'DEPUTY',
 'DERIVE',
 'DESCRIBE',
 'DESCRIPTION',
 'DESIGN',
 'DESIRE',
 'DESK',
 'DESPITE',
 'DESTROY',
 'DETAIL',
 'DETAILED',
 'DETERMINE',
 'DEVELOP',
 'DEVELOPMENT',
 'DEVICE',
 'DIE',
 'DIFFERENCE',
 'DIFFERENT',
 'DIFFICULT',
 'DIFFICULTY',
 'DINNER',
 'DIRECT',
 'DIRECTION',
 'DIRECTLY',
 'DIRECTOR',
 'DISAPPEAR',
 'DISCIPLINE',
 'DISCOVER',
 'DISCUSS',
 'DISCUSSION',
 'DISEASE',
 'DISPLAY',
 'DISTANCE',
 'DISTINCTION',
 'DISTRIBUTION',
 'DISTRICT',
 'DIVIDE',
 'DIVISION',
 'DO',
 'DOCTOR',
 'DOCUMENT',
 'DOG',
 'DOMESTIC',
 'DOOR',
 'DOUBLE',
 'DOUBT',
 'DOWN',
 'DRAW',
 'DRAWING',
 'DREAM',
 'DRESS',
 'DRINK',
 'DRIVE',
 'DRIVER',
 'DROP',
 'DRUG',
 'DRY',
 'DUE',
 'DURING',
 'DUTY',
 'EACH',
 'EAR',
 'EARLY',
 'EARN',
 'EARTH',
 'EASILY',
 'EAST',
 'EASY',
 'EAT',
 'ECONOMIC',
 'ECONOMY',
 'EDGE',
 'EDITOR',
 'EDUCATION',
 'EDUCATIONAL',
 'EFFECT',
 'EFFECTIVE',
 'EFFECTIVELY',
 'EFFORT',
 'EGG',
 'EITHER',
 'ELDERLY',
 'ELECTION',
 'ELEMENT',
 'ELSE',
 'ELSEWHERE',
 'EMERGE',
 'EMPHASIS',
 'EMPLOY',
 'EMPLOYEE',
 'EMPLOYER',
 'EMPLOYMENT',
 'EMPTY',
 'ENABLE',
 'ENCOURAGE',
 'END',
 'ENEMY',
 'ENERGY',
 'ENGINE',
 'ENGINEERING',
 'ENJOY',
 'ENOUGH',
 'ENSURE',
 'ENTER',
 'ENTERPRISE',
 'ENTIRE',
 'ENTIRELY',
 'ENTITLE',
 'ENTRY',
 'ENVIRONMENT',
 'ENVIRONMENTAL',
 'EQUAL',
 'EQUALLY',
 'EQUIPMENT',
 'ERROR',
 'ESCAPE',
 'ESPECIALLY',
 'ESSENTIAL',
 'ESTABLISH',
 'ESTABLISHMENT',
 'ESTATE',
 'ESTIMATE',
 'EVEN',
 'EVENING',
 'EVENT',
 'EVENTUALLY',
 'EVER',
 'EVERY',
 'EVERYBODY',
 'EVERYONE',
 'EVERYTHING',
 'EVIDENCE',
 'EXACTLY',
 'EXAMINATION',
 'EXAMINE',
 'EXAMPLE',
 'EXCELLENT',
 'EXCEPT',
 'EXCHANGE',
 'EXECUTIVE',
 'EXERCISE',
 'EXHIBITION',
 'EXIST',
 'EXISTENCE',
 'EXISTING',
 'EXPECT',
 'EXPECTATION',
 'EXPENDITURE',
 'EXPENSE',
 'EXPENSIVE',
 'EXPERIENCE',
 'EXPERIMENT',
 'EXPERT',
 'EXPLAIN',
 'EXPLANATION',
 'EXPLORE',
 'EXPRESS',
 'EXPRESSION',
 'EXTEND',
 'EXTENT',
 'EXTERNAL',
 'EXTRA',
 'EXTREMELY',
 'EYE',
 'FACE',
 'FACILITY',
 'FACT',
 'FACTOR',
 'FACTORY',
 'FAIL',
 'FAILURE',
 'FAIR',
 'FAIRLY',
 'FAITH',
 'FALL',
 'FAMILIAR',
 'FAMILY',
 'FAMOUS',
 'FAR',
 'FARM',
 'FARMER',
 'FASHION',
 'FAST',
 'FATHER',
 'FAVOUR',
 'FEAR',
 'FEATURE',
 'FEE',
 'FEEL',
 'FEELING',
 'FEMALE',
 'FEW',
 'FIELD',
 'FIGHT',
 'FIGURE',
 'FILE',
 'FILL',
 'FILM',
 'FINAL',
 'FINALLY',
 'FINANCE',
 'FINANCIAL',
 'FIND',
 'FINDING',
 'FINE',
 'FINGER',
 'FINISH',
 'FIRE',
 'FIRM',
 'FIRST',
 'FISH',
 'FIT',
 'FIX',
 'FLAT',
 'FLIGHT',
 'FLOOR',
 'FLOW',
 'FLOWER',
 'FLY',
 'FOCUS',
 'FOLLOW',
 'FOLLOWING',
 'FOOD',
 'FOOT',
 'FOOTBALL',
 'FOR',
 'FORCE',
 'FOREIGN',
 'FOREST',
 'FORGET',
 'FORM',
 'FORMAL',
 'FORMER',
 'FORWARD',
 'FOUNDATION',
 'FREE',
 'FREEDOM',
 'FREQUENTLY',
 'FRESH',
 'FRIEND',
 'FROM',
 'FRONT',
 'FRUIT',
 'FUEL',
 'FULL',
 'FULLY',
 'FUNCTION',
 'FUND',
 'FUNNY',
 'FURTHER',
 'FUTURE',
 'GAIN',
 'GAME',
 'GARDEN',
 'GAS',
 'GATE',
 'GATHER',
 'GENERAL',
 'GENERALLY',
 'GENERATE',
 'GENERATION',
 'GENTLEMAN',
 'GET',
 'GIRL',
 'GIVE',
 'GLASS',
 'GO',
 'GOAL',
 'GOD',
 'GOLD',
 'GOOD',
 'GOVERNMENT',
 'GRANT',
 'GREAT',
 'GREEN',
 'GREY',
 'GROUND',
 'GROUP',
 'GROW',
 'GROWING',
 'GROWTH',
 'GUEST',
 'GUIDE',
 'GUN',
 'HAIR',
 'HALF',
 'HALL',
 'HAND',
 'HANDLE',
 'HANG',
 'HAPPEN',
 'HAPPY',
 'HARD',
 'HARDLY',
 'HATE',
 'HAVE',
 'HE',
 'HEAD',
 'HEALTH',
 'HEAR',
 'HEART',
 'HEAT',
 'HEAVY',
 'HELL',
 'HELP',
 'HENCE',
 'HER',
 'HERE',
 'HERSELF',
 'HIDE',
 'HIGH',
 'HIGHLY',
 'HILL',
 'HIM',
 'HIMSELF',
 'HIS',
 'HISTORICAL',
 'HISTORY',
 'HIT',
 'HOLD',
 'HOLE',
 'HOLIDAY',
 'HOME',
 'HOPE',
 'HORSE',
 'HOSPITAL',
 'HOT',
 'HOTEL',
 'HOUR',
 'HOUSE',
 'HOUSEHOLD',
 'HOUSING',
 'HOW',
 'HOWEVER',
 'HUGE',
 'HUMAN',
 'HURT',
 'HUSBAND',
 'I',
 'IDEA',
 'IDENTIFY',
 'IF',
 'IGNORE',
 'ILLUSTRATE',
 'IMAGE',
 'IMAGINE',
 'IMMEDIATE',
 'IMMEDIATELY',
 'IMPACT',
 'IMPLICATION',
 'IMPLY',
 'IMPORTANCE',
 'IMPORTANT',
 'IMPOSE',
 'IMPOSSIBLE',
 'IMPRESSION',
 'IMPROVE',
 'IMPROVEMENT',
 'IN',
 'INCIDENT',
 'INCLUDE',
 'INCLUDING',
 'INCOME',
 'INCREASE',
 'INCREASED',
 'INCREASINGLY',
 'INDEED',
 'INDEPENDENT',
 'INDEX',
 'INDICATE',
 'INDIVIDUAL',
 'INDUSTRIAL',
 'INDUSTRY',
 'INFLUENCE',
 'INFORM',
 'INFORMATION',
 'INITIAL',
 'INITIATIVE',
 'INJURY',
 'INSIDE',
 'INSIST',
 'INSTANCE',
 'INSTEAD',
 'INSTITUTE',
 'INSTITUTION',
 'INSTRUCTION',
 'INSTRUMENT',
 'INSURANCE',
 'INTEND',
 'INTENTION',
 'INTEREST',
 'INTERESTED',
 'INTERESTING',
 'INTERNAL',
 'INTERNATIONAL',
 'INTERPRETATION',
 'INTERVIEW',
 'INTO',
 'INTRODUCE',
 'INTRODUCTION',
 'INVESTIGATE',
 'INVESTIGATION',
 'INVESTMENT',
 'INVITE',
 'INVOLVE',
 'IRON',
 'IS',
 'ISLAND',
 'ISSUE',
 'IT',
 'ITEM',
 'ITS',
 'ITSELF',
 'JOB',
 'JOIN',
 'JOINT',
 'JOURNEY',
 'JUDGE',
 'JUMP',
 'JUST',
 'JUSTICE',
 'KEEP',
 'KEY',
 'KID',
 'KILL',
 'KIND',
 'KING',
 'KITCHEN',
 'KNEE',
 'KNOW',
 'KNOWLEDGE',
 'LABOUR',
 'LACK',
 'LADY',
 'LAND',
 'LANGUAGE',
 'LARGE',
 'LARGELY',
 'LAST',
 'LATE',
 'LATER',
 'LATTER',
 'LAUGH',
 'LAUNCH',
 'LAW',
 'LAWYER',
 'LAY',
 'LEAD',
 'LEADER',
 'LEADERSHIP',
 'LEADING',
 'LEAF',
 'LEAGUE',
 'LEAN',
 'LEARN',
 'LEAST',
 'LEAVE',
 'LEFT',
 'LEG',
 'LEGAL',
 'LEGISLATION',
 'LENGTH',
 'LESS',
 'LET',
 'LETTER',
 'LEVEL',
 'LIABILITY',
 'LIBERAL',
 'LIBRARY',
 'LIE',
 'LIFE',
 'LIFT',
 'LIGHT',
 'LIKE',
 'LIKELY',
 'LIMIT',
 'LIMITED',
 'LINE',
 'LINK',
 'LIP',
 'LIST',
 'LISTEN',
 'LITERATURE',
 'LITTLE',
 'LIVE',
 'LIVING',
 'LOAN',
 'LOCAL',
 'LOCATION',
 'LONG',
 'LOOK',
 'LORD',
 'LOSE',
 'LOSS',
 'LOT',
 'LOVE',
 'LOVELY',
 'LOW',
 'LUNCH',
 'MACHINE',
 'MAGAZINE',
 'MAIN',
 'MAINLY',
 'MAINTAIN',
 'MAJOR',
 'MAJORITY',
 'MAKE',
 'MALE',
 'MAN',
 'MANAGE',
 'MANAGEMENT',
 'MANAGER',
 'MANNER',
 'MANY',
 'MAP',
 'MARK',
 'MARKET',
 'MARRIAGE',
 'MARRIED',
 'MARRY',
 'MASS',
 'MASTER',
 'MATCH',
 'MATERIAL',
 'MATTER',
 'MAY',
 'MAYBE',
 'ME',
 'MEAL',
 'MEAN',
 'MEANING',
 'MEANS',
 'MEANWHILE',
 'MEASURE',
 'MECHANISM',
 'MEDIA',
 'MEDICAL',
 'MEET',
 'MEETING',
 'MEMBER',
 'MEMBERSHIP',
 'MEMORY',
 'MENTAL',
 'MENTION',
 'MERELY',
 'MESSAGE',
 'METAL',
 'METHOD',
 'MIDDLE',
 'MIGHT',
 'MILE',
 'MILITARY',
 'MILK',
 'MIND',
 'MINE',
 'MINISTER',
 'MINISTRY',
 'MINUTE',
 'MISS',
 'MISTAKE',
 'MODEL',
 'MODERN',
 'MODULE',
 'MOMENT',
 'MONEY',
 'MONTH',
 'MORE',
 'MORNING',
 'MOST',
 'MOTHER',
 'MOTION',
 'MOTOR',
 'MOUNTAIN',
 'MOUTH',
 'MOVE',
 'MOVEMENT',
 'MUCH',
 'MURDER',
 'MUSEUM',
 'MUSIC',
 'MUST',
 'MY',
 'MYSELF',
 ...]&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h5 id="Alphabetical-Order-of-Character"&gt;Alphabetical Order of Character&lt;a class="anchor-link" href="http://louistiao.me/posts/project-euler/problem-42-coded-triangle-numbers/#Alphabetical-Order-of-Character"&gt;¶&lt;/a&gt;&lt;/h5&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [36]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;alpha_ord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'A'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isupper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nb"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [37]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;alpha_ord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[37]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;1&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [38]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;alpha_ord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'A'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[38]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;1&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [39]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;alpha_ord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'F'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[39]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;6&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [40]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;alpha_ord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'z'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[40]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;26&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h5 id="Numerical-Value-of-String"&gt;Numerical Value of String&lt;a class="anchor-link" href="http://louistiao.me/posts/project-euler/problem-42-coded-triangle-numbers/#Numerical-Value-of-String"&gt;¶&lt;/a&gt;&lt;/h5&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [41]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;str_val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alpha_ord&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [42]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;str_val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'SKY'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[42]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;55&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h5 id="Get-numerical-values-of-all-words"&gt;Get numerical values of all words&lt;a class="anchor-link" href="http://louistiao.me/posts/project-euler/problem-42-coded-triangle-numbers/#Get-numerical-values-of-all-words"&gt;¶&lt;/a&gt;&lt;/h5&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [43]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[43]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;[1,
 78,
 20,
 59,
 45,
 49,
 132,
 39,
 48,
 50,
 59,
 91,
 74,
 77,
 53,
 105,
 17,
 74,
 75,
 24,
 62,
 60,
 109,
 58,
 95,
 9,
 76,
 89,
 70,
 166,
 47,
 56,
 58,
 50,
 75,
 44,
 60,
 41,
 41,
 50,
 39,
 50,
 108,
 115,
 32,
 71,
 13,
 55,
 47,
 23,
 36,
 88,
 19,
 14,
 23,
 28,
 76,
 25,
 63,
 80,
 47,
 49,
 66,
 75,
 47,
 127,
 92,
 81,
 50,
 89,
 84,
 15,
 100,
 66,
 19,
 50,
 87,
 63,
 81,
 80,
 40,
 86,
 74,
 98,
 89,
 56,
 91,
 128,
 51,
 57,
 80,
 116,
 70,
 91,
 143,
 78,
 135,
 93,
 25,
 52,
 99,
 52,
 32,
 57,
 73,
 64,
 116,
 73,
 39,
 68,
 87,
 20,
 31,
 64,
 96,
 82,
 134,
 64,
 92,
 125,
 78,
 147,
 21,
 120,
 53,
 56,
 95,
 64,
 118,
 100,
 83,
 119,
 62,
 83,
 137,
 65,
 59,
 51,
 47,
 48,
 50,
 31,
 30,
 17,
 96,
 7,
 10,
 38,
 27,
 21,
 28,
 21,
 27,
 34,
 50,
 60,
 7,
 26,
 28,
 97,
 56,
 43,
 11,
 72,
 51,
 37,
 81,
 101,
 42,
 39,
 60,
 55,
 57,
 55,
 61,
 44,
 46,
 70,
 74,
 65,
 18,
 35,
 29,
 33,
 57,
 31,
 29,
 43,
 48,
 73,
 52,
 40,
 40,
 38,
 46,
 36,
 43,
 62,
 45,
 74,
 85,
 41,
 42,
 44,
 46,
 37,
 54,
 45,
 40,
 64,
 50,
 40,
 86,
 59,
 48,
 78,
 55,
 42,
 108,
 67,
 43,
 48,
 27,
 54,
 28,
 64,
 18,
 61,
 40,
 78,
 62,
 22,
 26,
 27,
 50,
 66,
 103,
 65,
 28,
 31,
 24,
 35,
 94,
 49,
 32,
 73,
 65,
 106,
 70,
 107,
 35,
 39,
 67,
 67,
 34,
 38,
 57,
 71,
 77,
 137,
 42,
 33,
 30,
 54,
 31,
 36,
 43,
 65,
 61,
 50,
 129,
 86,
 57,
 55,
 38,
 54,
 35,
 39,
 76,
 63,
 39,
 54,
 91,
 82,
 38,
 31,
 27,
 40,
 34,
 81,
 70,
 108,
 59,
 84,
 115,
 61,
 36,
 83,
 92,
 129,
 73,
 125,
 103,
 73,
 150,
 133,
 87,
 71,
 123,
 139,
 89,
 126,
 88,
 115,
 111,
 118,
 151,
 76,
 72,
 81,
 77,
 125,
 103,
 80,
 88,
 78,
 78,
 82,
 100,
 74,
 112,
 121,
 153,
 87,
 107,
 146,
 99,
 106,
 171,
 108,
 76,
 76,
 91,
 101,
 101,
 94,
 110,
 127,
 160,
 97,
 131,
 155,
 59,
 73,
 111,
 82,
 37,
 57,
 55,
 77,
 73,
 116,
 98,
 72,
 81,
 77,
 63,
 52,
 85,
 59,
 48,
 79,
 77,
 111,
 75,
 103,
 74,
 63,
 46,
 108,
 100,
 40,
 99,
 136,
 139,
 114,
 44,
 31,
 49,
 104,
 34,
 26,
 30,
 84,
 30,
 14,
 22,
 38,
 37,
 31,
 22,
 30,
 78,
 48,
 30,
 42,
 73,
 43,
 105,
 44,
 75,
 41,
 91,
 134,
 48,
 116,
 48,
 91,
 63,
 65,
 132,
 58,
 60,
 39,
 78,
 106,
 51,
 60,
 93,
 79,
 131,
 48,
 18,
 75,
 87,
 90,
 115,
 64,
 59,
 97,
 96,
 92,
 89,
 100,
 95,
 94,
 132,
 62,
 86,
 75,
 136,
 160,
 102,
 53,
 101,
 19,
 75,
 95,
 26,
 88,
 52,
 59,
 62,
 56,
 46,
 76,
 41,
 65,
 56,
 58,
 76,
 53,
 50,
 47,
 30,
 73,
 70,
 17,
 24,
 61,
 38,
 52,
 71,
 45,
 50,
 26,
 77,
 90,
 21,
 71,
 92,
 105,
 45,
 81,
 118,
 70,
 19,
 65,
 81,
 83,
 74,
 41,
 100,
 53,
 90,
 86,
 96,
 109,
 138,
 79,
 39,
 89,
 23,
 62,
 74,
 54,
 107,
 69,
 70,
 82,
 62,
 129,
 71,
 108,
 85,
 82,
 149,
 162,
 56,
 93,
 120,
 74,
 49,
 107,
 104,
 95,
 147,
 70,
 92,
 46,
 76,
 66,
 137,
 50,
 75,
 121,
 109,
 133,
 67,
 90,
 125,
 71,
 76,
 100,
 73,
 67,
 114,
 88,
 115,
 77,
 104,
 107,
 73,
 132,
 141,
 88,
 119,
 104,
 129,
 88,
 81,
 131,
 95,
 106,
 144,
 72,
 88,
 99,
 68,
 127,
 35,
 15,
 85,
 30,
 63,
 88,
 28,
 72,
 34,
 71,
 44,
 31,
 69,
 66,
 75,
 25,
 38,
 61,
 72,
 46,
 58,
 83,
 30,
 76,
 16,
 28,
 58,
 42,
 34,
 36,
 50,
 66,
 32,
 39,
 40,
 42,
 79,
 52,
 69,
 33,
 63,
 34,
 59,
 65,
 38,
 46,
 72,
 42,
 35,
 39,
 39,
 62,
 66,
 56,
 79,
 43,
 64,
 83,
 113,
 40,
 56,
 83,
 39,
 47,
 74,
 83,
 71,
 52,
 65,
 75,
 85,
 119,
 34,
 66,
 143,
 56,
 56,
 52,
 73,
 74,
 44,
 51,
 76,
 102,
 45,
 80,
 96,
 91,
 31,
 26,
 49,
 27,
 33,
 59,
 62,
 99,
 75,
 108,
 91,
 32,
 46,
 43,
 58,
 22,
 35,
 26,
 38,
 41,
 133,
 60,
 51,
 49,
 55,
 79,
 77,
 63,
 93,
 91,
 72,
 46,
 42,
 36,
 27,
 33,
 27,
 44,
 30,
 60,
 66,
 31,
 68,
 34,
 36,
 13,
 18,
 54,
 32,
 52,
 34,
 61,
 37,
 41,
 35,
 31,
 36,
 73,
 26,
 32,
 69,
 41,
 30,
 72,
 36,
 114,
 114,
 37,
 39,
 40,
 74,
 41,
 44,
 65,
 100,
 43,
 60,
 62,
 68,
 107,
 93,
 46,
 96,
 41,
 57,
 67,
 69,
 9,
 19,
 92,
 15,
 68,
 137,
 35,
 58,
 79,
 116,
 62,
 121,
 75,
 114,
 126,
 77,
 119,
 137,
 98,
 150,
 23,
 78,
 68,
 93,
 59,
 74,
 78,
 136,
 41,
 110,
 56,
 65,
 105,
 127,
 130,
 89,
 75,
 134,
 74,
 118,
 97,
 60,
 90,
 85,
 72,
 137,
 170,
 162,
 153,
 104,
 66,
 120,
 110,
 119,
 140,
 93,
 152,
 184,
 125,
 58,
 109,
 162,
 131,
 164,
 141,
 79,
 99,
 56,
 28,
 59,
 73,
 29,
 47,
 48,
 71,
 27,
 48,
 68,
 108,
 47,
 60,
 70,
 87,
 37,
 41,
 24,
 44,
 38,
 41,
 70,
 35,
 63,
 96,
 69,
 27,
 42,
 31,
 68,
 43,
 80,
 52,
 38,
 56,
 76,
 49,
 59,
 36,
 84,
 38,
 22,
 45,
 97,
 52,
 24,
 51,
 32,
 50,
 57,
 45,
 43,
 24,
 37,
 123,
 66,
 55,
 37,
 80,
 56,
 99,
 59,
 85,
 26,
 32,
 47,
 56,
 37,
 74,
 63,
 72,
 40,
 46,
 37,
 60,
 79,
 129,
 78,
 48,
 73,
 42,
 43,
 89,
 48,
 53,
 49,
 51,
 65,
 47,
 54,
 91,
 50,
 58,
 53,
 76,
 37,
 74,
 81,
 57,
 111,
 30,
 31,
 28,
 41,
 93,
 59,
 65,
 53,
 30,
 43,
 68,
 72,
 68,
 75,
 52,
 76,
 45,
 79,
 77,
 39,
 46,
 18,
 31,
 33,
 63,
 52,
 90,
 82,
 85,
 32,
 47,
 43,
 73,
 56,
 108,
 89,
 65,
 90,
 78,
 69,
 51,
 65,
 47,
 57,
 39,
 107,
 45,
 40,
 41,
 107,
 127,
 82,
 60,
 78,
 49,
 69,
 70,
 80,
 72,
 70,
 51,
 90,
 67,
 79,
 86,
 81,
 107,
 77,
 55,
 107,
 45,
 79,
 92,
 65,
 73,
 38,
 80,
 ...]&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [59]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[59]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;{'AGO': 23,
 'LIFE': 32,
 'EVERYONE': 109,
 'APPEARANCE': 80,
 'AGE': 13,
 'LATER': 56,
 'ENVIRONMENT': 149,
 'LIFT': 47,
 'DEMAND': 41,
 'GROWING': 93,
 'EFFORT': 70,
 'AMONG': 50,
 'LAST': 52,
 'POWER': 77,
 'EMPLOYER': 109,
 'TINY': 68,
 'ENGINEERING': 107,
 'MUCH': 45,
 'REPRESENTATION': 179,
 'EXPLAIN': 81,
 'DISAPPEAR': 89,
 'NATURE': 79,
 'HANG': 30,
 'HAND': 27,
 'CURRENT': 99,
 'GO': 22,
 'ENTRY': 82,
 'APPEAR': 57,
 'MAP': 30,
 'MAY': 39,
 'MONEY': 72,
 'ANNUAL': 63,
 'PRIMARY': 100,
 'PERSON': 87,
 'NEAR': 38,
 'EXPERIMENT': 129,
 'PROPERTY': 133,
 'MAN': 28,
 'FAITH': 44,
 'NORMAL': 73,
 'BED': 11,
 'VOLUME': 88,
 'AROUND': 73,
 'BELONG': 55,
 'BEHAVIOUR': 101,
 'ASSUMPTION': 147,
 'COMMON': 73,
 'UNDERTAKE': 99,
 'PROPOSAL': 112,
 'DEMOCRATIC': 91,
 'CLEARLY': 76,
 'COUNT': 73,
 'TONE': 54,
 'SEQUENCE': 89,
 'UNDER': 62,
 'ACTIVE': 60,
 'NOD': 33,
 'EVENT': 66,
 'TRAFFIC': 63,
 'NOT': 49,
 'SENIOR': 80,
 'NOW': 52,
 'NOR': 47,
 'DETAILED': 60,
 'ATTEND': 64,
 'INTERESTING': 140,
 'QUIET': 72,
 'POPULAR': 99,
 'SMILE': 58,
 'REFUSE': 74,
 'TASK': 51,
 'DROP': 53,
 'AMONGST': 89,
 'MEMBER': 56,
 'TABLE': 40,
 'DOCUMENT': 95,
 'WHY': 56,
 'KITCHEN': 70,
 'DIFFERENT': 87,
 'PACKAGE': 44,
 'AVERAGE': 59,
 'PUBLISH': 87,
 'BLOODY': 73,
 'JUMP': 60,
 'EVEN': 46,
 'AIRCRAFT': 76,
 'EARLY': 61,
 'EXPENDITURE': 141,
 'WESTERN': 104,
 'BOTTLE': 74,
 'EVER': 50,
 'ELECTION': 83,
 'PRIME': 61,
 'NOTICE': 66,
 'FARM': 38,
 'COMPONENT': 115,
 'CURRENTLY': 136,
 'SINGLE': 66,
 'DESIRE': 60,
 'ORGANISATION': 142,
 'SUPPLY': 109,
 'COMPETITION': 139,
 'ONE': 34,
 'MAINTAIN': 81,
 'PANEL': 48,
 'A': 1,
 'HEAD': 18,
 'FORM': 52,
 'TERM': 56,
 'HEAT': 34,
 'HEAR': 32,
 'DEVICE': 48,
 'TOMORROW': 137,
 'US': 40,
 'BIND': 29,
 'CALL': 28,
 'ANIMAL': 50,
 'CONTRIBUTION': 160,
 'PEOPLE': 69,
 'LIMIT': 63,
 'ALTHOUGH': 92,
 'CONTAIN': 76,
 'SUFFER': 75,
 'TRUE': 64,
 'OUGHT': 71,
 'ECONOMY': 90,
 'HEAVY': 61,
 'RELY': 60,
 'INFORM': 75,
 'INFLUENCE': 89,
 'SOURCE': 81,
 'DINNER': 64,
 'CONDITION': 103,
 'APPOINT': 91,
 'SAMPLE': 66,
 'ISSUE': 73,
 'CLAIM': 38,
 'MYSELF': 80,
 'COMBINATION': 115,
 'DECISION': 78,
 'MONTH': 70,
 'STICK': 62,
 'ADDRESS': 70,
 'PROGRESS': 117,
 'ORDINARY': 104,
 'INJURY': 97,
 'APART': 56,
 'HORSE': 65,
 'INVITE': 79,
 'CONCERNED': 81,
 'REDUCE': 56,
 'DISCOVER': 95,
 'TELEPHONE': 100,
 'DEFENCE': 42,
 'PENSION': 92,
 'BEGIN': 37,
 'STRONG': 93,
 'PROFIT': 84,
 'SHARE': 51,
 'NEIGHBOUR': 99,
 'SOCIETY': 96,
 'VILLAGE': 68,
 'PHYSICAL': 93,
 'SPECIAL': 65,
 'UNLESS': 90,
 'MEDIA': 32,
 'MAINLY': 74,
 'POSSIBLE': 97,
 'ACCORDING': 74,
 'YOUTH': 89,
 'POSSIBLY': 117,
 'ANYTHING': 98,
 'GLASS': 58,
 'CONTINUE': 101,
 'ORGANISE': 88,
 'TIME': 47,
 'VIEW': 59,
 'EVERYBODY': 121,
 'WORKING': 97,
 'SECTION': 85,
 'CONDUCT': 80,
 'IMPROVEMENT': 150,
 'RULE': 56,
 'POLITICS': 103,
 'MIGHT': 57,
 'YOU': 61,
 'LAND': 31,
 'AREA': 25,
 'RECOGNIZE': 102,
 'TRADE': 48,
 'INDICATE': 65,
 'BELIEVE': 60,
 'ASSOCIATION': 125,
 'ONCE': 37,
 'DANGEROUS': 104,
 'SHAKE': 44,
 'PERCENT': 81,
 'WORLD': 72,
 'SURVIVE': 116,
 'CLIMB': 39,
 'PIECE': 38,
 'TRIP': 63,
 'CHANNEL': 57,
 'PREVIOUS': 125,
 'REPRESENT': 120,
 'HOUSEHOLD': 107,
 'BREAK': 37,
 'MAJORITY': 111,
 'REST': 62,
 'SPEED': 49,
 'IMPROVE': 98,
 'BRIDGE': 45,
 'INTERPRETATION': 184,
 'DEGREE': 44,
 'DETAIL': 51,
 'WEAPON': 74,
 'THROUGHOUT': 153,
 'CORPORATE': 111,
 'UNIVERSITY': 162,
 'NEVER': 64,
 'PRIVATE': 91,
 'SPIRIT': 91,
 'RACE': 27,
 'TEACHING': 67,
 'LEGAL': 37,
 'MILE': 39,
 'RELATION': 94,
 'SKIN': 53,
 'APPARENTLY': 128,
 'MILK': 45,
 'VAST': 62,
 'GROUND': 79,
 'EVENING': 76,
 'FACE': 15,
 'SLEEP': 57,
 'FACT': 30,
 'NICE': 31,
 'ENGINE': 54,
 'ATMOSPHERE': 120,
 'ENABLE': 39,
 'SOMEWHAT': 104,
 'PAY': 42,
 'OBJECT': 55,
 'ALRIGHT': 75,
 'SORRY': 95,
 'STEAL': 57,
 'COMMENT': 83,
 'INVOLVE': 99,
 'LIVE': 48,
 'DETERMINE': 93,
 'TEACH': 37,
 'CERTAINLY': 107,
 'BRIEF': 40,
 'SIGN': 49,
 'PRESSURE': 121,
 'CHIEF': 31,
 'WHERE': 59,
 'SECURITY': 120,
 'HUSBAND': 69,
 'OIL': 36,
 'REGION': 68,
 'SEND': 42,
 'BIRD': 33,
 'HARDLY': 68,
 'VARIETY': 100,
 'REQUIRE': 93,
 'LARGE': 43,
 'INTERVIEW': 125,
 'OPINION': 92,
 'BOAT': 38,
 'SEARCH': 54,
 'BUY': 48,
 'AUTHOR': 83,
 'BUS': 42,
 'RIDE': 36,
 'POSSIBILITY': 155,
 'HISTORICAL': 114,
 'MEET': 43,
 'PAINTING': 90,
 'FINISH': 65,
 'LOVE': 54,
 'THEME': 51,
 'SUPPOSE': 111,
 'EXTERNAL': 99,
 'HALF': 27,
 'HALL': 33,
 'PROVIDED': 93,
 'FINANCIAL': 69,
 'NECK': 33,
 'INTERESTED': 119,
 'FACTOR': 63,
 'ALONE': 47,
 'ALONG': 49,
 'STRONGLY': 130,
 'GIVE': 43,
 'COMMERCIAL': 92,
 'WRITING': 100,
 'FLIGHT': 62,
 'NETWORK': 106,
 'DAUGHTER': 84,
 'ABILITY': 78,
 'VISITOR': 112,
 'ARRIVE': 73,
 'EXTREMELY': 127,
 'EXERCISE': 88,
 'SORT': 72,
 'WAGE': 36,
 'ENCOURAGE': 89,
 'MAJOR': 57,
 'NAME': 33,
 'CERTAIN': 70,
 'DESPITE': 78,
 'APPEAL': 51,
 'PUBLIC': 63,
 'VARY': 66,
 'REALITY': 90,
 'CULTURAL': 108,
 'SPEAKER': 75,
 'LOW': 50,
 'LOT': 47,
 'LEARN': 50,
 'APPOINTMENT': 143,
 'CREATE': 52,
 'RECORD': 63,
 'SPEECH': 56,
 'ANOTHER': 81,
 'ASSESSMENT': 134,
 'EMERGE': 53,
 'DEFENDANT': 73,
 'EFFECT': 45,
 'NATION': 73,
 'BELOW': 57,
 'LEADERSHIP': 97,
 'FEMALE': 42,
 'ESTIMATE': 92,
 'CRISIS': 77,
 'FOCUS': 64,
 'ACCESS': 50,
 'COMMISSION': 129,
 'SIGNIFICANCE': 99,
 'TRUST': 98,
 'RECOGNITION': 129,
 'DRY': 47,
 'THAT': 49,
 'FAMILIAR': 69,
 'MOVE': 55,
 'PROPER': 88,
 'THAN': 43,
 'RESPOND': 91,
 'URBAN': 56,
 'FLOWER': 79,
 'KEEP': 37,
 'SPECIFIC': 70,
 'SETTLE': 81,
 'IRON': 56,
 'PRESIDENT': 110,
 'EXPENSIVE': 119,
 'WIDE': 41,
 'PROVIDE': 89,
 'WELFARE': 70,
 'REQUEST': 105,
 'FEATURE': 76,
 'INSIST': 90,
 'WHICH': 51,
 'BALANCE': 38,
 'LIVING': 73,
 'DERIVE': 63,
 'MEASURE': 82,
 'OUTPUT': 113,
 'PAYMENT': 94,
 'SURE': 63,
 'PAIN': 40,
 'SUPPORT': 125,
 'PRINCIPLE': 102,
 'PAIR': 44,
 'KNEE': 35,
 'HE': 13,
 'TERRIBLE': 89,
 'REGULATION': 122,
 'PRODUCTION': 135,
 'CONNECT': 74,
 'INFORMATION': 134,
 'REPEAT': 65,
 'CONFIRM': 78,
 'COURSE': 81,
 'SIZE': 59,
 'WARN': 56,
 'MAIN': 37,
 'THING': 58,
 'WOOD': 57,
 'SENSE': 62,
 'QUALITY': 105,
 'WHO': 46,
 'SERVICE': 81,
 'SUN': 54,
 'SUM': 53,
 'MECHANISM': 85,
 'TWICE': 60,
 'GAME': 26,
 'TROOP': 84,
 'PLENTY': 92,
 'REVEAL': 63,
 'EQUALLY': 93,
 'SLOW': 69,
 'TEA': 26,
 'SHAPE': 49,
 'CONCLUDE': 77,
 'WRITE': 75,
 'ADMIT': 47,
 'OUR': 54,
 'CONSEQUENCE': 121,
 'FRESH': 56,
 'PROBLEM': 81,
 'BORDER': 62,
 'SOLUTION': 125,
 'SAFETY': 76,
 'LEFT': 43,
 'DUTY': 70,
 'CANDIDATE': 61,
 'MEDICAL': 47,
 'CURRICULUM': 139,
 'CHARACTER': 77,
 'NUMBER': 73,
 'BACKGROUND': 96,
 'OFTEN': 60,
 'MEANING': 63,
 'ALSO': 47,
 'BLOCK': 43,
 'REASONABLE': 92,
 'PROFESSIONAL': 149,
 'EAR': 24,
 'EAT': 26,
 'SHOP': 58,
 'SHOT': 62,
 'SHOW': 65,
 'SUGGEST': 98,
 'METAL': 51,
 'VALUE': 61,
 'TRADITIONAL': 123,
 'HOW': 46,
 'HOT': 43,
 'POTENTIAL': 112,
 'NEARLY': 75,
 'QUARTER': 100,
 'DEBATE': 37,
 'DECADE': 22,
 'NEGOTIATION': 129,
 'POUND': 70,
 'WEST': 67,
 'FAVOUR': 83,
 'TOUR': 74,
 'MOUTH': 77,
 'DEVELOP': 79,
 'SIMPLE': 74,
 'TEXT': 69,
 'OBTAIN': 61,
 'SIMPLY': 94,
 'DIRECTION': 97,
 'ADDITIONAL': 89,
 'CROWD': 63,
 'ARTIST': 87,
 'DEPARTMENT': 116,
 'DEFINE': 43,
 'WEEK': 44,
 'FULL': 51,
 'FIT': 35,
 'SENTENCE': 85,
 'SOMEWHERE': 111,
 'FIX': 39,
 'INSTRUCTION': 162,
 'ANYWAY': 89,
 'LEAST': 57,
 'HIGHLY': 69,
 'VERSION': 102,
 'CRITERION': 111,
 'REALISE': 69,
 'FEELING': 58,
 'PLATE': 54,
 'PROCESS': 95,
 'REVIEW': 82,
 'WILL': 56,
 'TAPE': 42,
 'WILD': 48,
 'LAWYER': 84,
 'LARGELY': 80,
 'ADVICE': 44,
 'PLASTIC': 80,
 'AFTERWARDS': 115,
 'CHEMICAL': 54,
 'HIDE': 26,
 'ASSUME': 78,
 'COMPANY': 87,
 'WRONG': 77,
 'RELIEF': 55,
 'FORMAL': 65,
 'WEEKEND': 67,
 'FLAT': 39,
 'DOOR': 52,
 'WIDELY': 78,
 'UNION': 73,
 'CONTRIBUTE': 127,
 'INDIVIDUAL': 105,
 'RESULT': 95,
 'GENERATE': 75,
 'BLOW': 52,
 'RECALL': 51,
 'AGENCY': 55,
 'TEND': 43,
 'SOCIAL': 59,
 'MY': 38,
 'REAL': 36,
 'READ': 28,
 'DOG': 26,
 'HURT': 67,
 'MEMBERSHIP': 108,
 'COST': 57,
 'FOLLOW': 83,
 'DEFINITION': 105,
 'EXECUTIVE': 114,
 'CAR': 22,
 'PRESENCE': 85,
 'ACTIVITY': 109,
 'DOMESTIC': 88,
 'CONTENT': 91,
 'VARIOUS': 105,
 'REPLY': 76,
 'IMPLICATION': 121,
 'UPPER': 76,
 'JOIN': 48,
 'PERSONAL': 100,
 'MUSEUM': 92,
 'PLEASE': 58,
 'PUB': 39,
 'ENSURE': 82,
 'CHOOSE': 65,
 'PUT': 57,
 'IMMEDIATELY': 116,
 'SLIGHTLY': 112,
 'BAR': 21,
 'RELATIONSHIP': 146,
 'DANGER': 49,
 'IMPORTANCE': 114,
 'DESCRIBE': 65,
 'BAG': 10,
 'BAD': 7,
 'YOUR': 79,
 'FACILITY': 85,
 'TOGETHER': 98,
 'CELL': 32,
 'ACADEMIC': 39,
 'PRISON': 91,
 'SOFT': 60,
 'ALMOST': 80,
 'MARRIED': 68,
 'SOUTHERN': 120,
 'AGAINST': 71,
 'PLAYER': 77,
 'FINALLY': 79,
 'COMPUTER': 111,
 'LEAGUE': 51,
 'COMPARE': 71,
 'ALREADY': 66,
 'THEATRE': 77,
 'EDGE': 21,
 'HEALTH': 54,
 'LIE': 26,
 'ATTEMPT': 95,
 'LESS': 55,
 'ENTER': 62,
 'ROYAL': 71,
 'DIFFICULTY': 115,
 'LIP': 37,
 'FILE': 32,
 'SPEND': 58,
 'FILM': 40,
 'FILL': 39,
 'RARE': 42,
 'OFFER': 50,
 'COLOUR': 84,
 'EXCEPT': 73,
 'FAMILY': 66,
 'AVOID': 51,
 'TECHNIQUE': 102,
 'BASE': 27,
 'DEEP': 30,
 'NIGHT': 58,
 'HENCE': 35,
 'CAUSE': 49,
 'WISH': 59,
 'IMPOSE': 77,
 'REGULAR': 82,
 'EITHER': 65,
 'OCCUR': 60,
 'AFTER': 50,
 'CONSTANT': 106,
 'COUNTRY': 116,
 'SOMETIMES': 118,
 'AFFECT': 41,
 'COLD': 34,
 'FINAL': 42,
 'POPULATION': 139,
 'MOUNTAIN': 107,
 'WOULD': 75,
 'OBSERVE': 86,
 'FINGER': 59,
 'FUNCTION': 102,
 'FAIRLY': 71,
 'END': 23,
 'OBSERVATION': 140,
 'LEAF': 24,
 'LEAD': 22,
 'LEAN': 32,
 'AGREEMENT': 88,
 'MUSIC': 65,
 'REGIONAL': 81,
 'STUDIO': 88,
 'ENJOY': 69,
 'REQUIREMENT': 145,
 'SET': 44,
 'FINANCE': 52,
 'HOUR': 62,
 'AGENT': 47,
 'SEX': 48,
 'INCREASE': 74,
 'BRAIN': 44,
 'SEE': 29,
 'SEA': 25,
 'THREATEN': 91,
 'PRESENT': 97,
 'EDUCATIONAL': 105,
 'REVOLUTION': 151,
 'LETTER': 80,
 'CARD': 26,
 'CARE': 27,
 'LIST': 60,
 'BRANCH': 46,
 'DISCUSS': 94,
 'WORRY': 99,
 'DO': 19,
 'PARTICULARLY': 156,
 'BASIS': 50,
 'TOOTH': 78,
 'TRIAL': 60,
 'OUTSIDE': 93,
 'CONTACT': 76,
 'BASIC': 34,
 'BOTH': 45,
 'SOMEONE': 86,
 'QUESTION': 120,
 'ENVIRONMENTAL': 162,
 'ESTABLISH': 95,
 'ORIGINAL': 85,
 'SUCCESSFUL': 128,
 'GOD': 26,
 'INTO': 58,
 'ARGUMENT': 99,
 'POCKET': 70,
 'RECOMMEND': 90,
 'SERIOUS': 106,
 'COPY': 59,
 'SKILL': 63,
 'ROOM': 61,
 'CITY': 57,
 'CONCEPT': 76,
 'WHOSE': 70,
 'ADD': 9,
 'ADULT': 58,
 'PROSPECT': 112,
 'WE': 28,
 'EXTEND': 72,
 'THOUGHT': 99,
 'EXTENT': 88,
 'SOUTH': 83,
 'BUSY': 67,
 'HOWEVER': 96,
 'REMAIN': 60,
 'IMPORTANT': 126,
 'PRETTY': 104,
 'NORMALLY': 110,
 'SURELY': 100,
 'MOVEMENT': 107,
 'RISK': 57,
 'LEVEL': 56,
 'NATIONAL': 86,
 'RISE': 51,
 'MODULE': 70,
 'PAST': 56,
 'REPRESENTATIVE': 177,
 'PASS': 55,
 'OPERATE': 80,
 'TOWN': 72,
 'SCHOOL': 72,
 'ACTUAL': 58,
 'GATHER': 59,
 'CULTURE': 100,
 'PROPERLY': 125,
 'LINK': 46,
 'YES': 49,
 'YET': 50,
 'HELP': 41,
 'MARRY': 75,
 'EXISTING': 107,
 'FAMOUS': 75,
 'INCIDENT': 78,
 'COMPLEX': 88,
 'DESIGN': 58,
 'BOARD': 40,
 'HELL': 37,
 'AHEAD': 19,
 'ROOF': 54,
 'CLUB': 38,
 'CARRY': 65,
 'ADVISE': 60,
 'DIVIDE': 53,
 'FOR': 39,
 'FOOD': 40,
 'FUND': 45,
 'FOOT': 56,
 'WHOLE': 63,
 'TODAY': 65,
 'UNITED': 73,
 'SURFACE': 73,
 'PARTNER': 92,
 'TEACHER': 60,
 'WIND': 50,
 'WINE': 51,
 'COS': 37,
 'UNFORTUNATELY': 192,
 'THESE': 57,
 'FISH': 42,
 'HARD': 31,
 'PER': 39,
 'RECENT': 65,
 'CASE': 28,
 'JOB': 27,
 'BETTER': 70,
 'LUNCH': 58,
 'ATTRACTIVE': 119,
 'PLUS': 68,
 'CATEGORY': 94,
 'FAIR': 34,
 'MERELY': 78,
 'FACTORY': 88,
 'YOUNG': 82,
 'FIELD': 36,
 'ABSENCE': 49,
 'STUFF': 72,
 'WAY': 49,
 'FAIL': 28,
 'WALK': 47,
 'COME': 36,
 'GROW': 63,
 'DISCIPLINE': 100,
 'RUN': 53,
 'MINISTRY': 127,
 'SUBSTANTIAL': 138,
 'INSTITUTION': 170,
 'IGNORE': 68,
 'REJECT': 61,
 'OWNER': 75,
 'HERSELF': 73,
 'TELL': 49,
 'FEEL': 28,
 'DIE': 18,
 'CRIME': 48,
 'AIM': 23,
 'PARTICULAR': 119,
 'AID': 14,
 'WONDER': 79,
 'CONTROL': 97,
 'POLICE': 60,
 'MEANS': 52,
 'INTRODUCE': 109,
 'INCREASINGLY': 136,
 'FRUIT': 74,
 'ARISE': 52,
 'POLICY': 80,
 'MEAL': 31,
 'CONFLICT': 82,
 'MEAN': 33,
 'I': 9,
 'MAYBE': 46,
 'IS': 28,
 'IT': 29,
 'CAPITAL': 62,
 'IF': 15,
 'HIGH': 32,
 'WING': 53,
 'PROMISE': 95,
 'WITHDRAW': 106,
 'BOX': 41,
 'BOY': 42,
 'THOUGH': 79,
 'WORKS': 86,
 'EXPLORE': 95,
 'OVER': 60,
 'WITHIN': 83,
 'PARK': 46,
 'BACK': 17,
 'INVESTIGATE': 131,
 'PART': 55,
 'TREAT': 64,
 'GIRL': 46,
 'TO': 35,
 'RELIGION': 89,
 'ONTO': 64,
 'GRANT': 60,
 'SAFE': 31,
 'OBVIOUS': 103,
 'BENEATH': 55,
 'TREATY': 89,
 'CREDIT': 59,
 'CHAIRMAN': 67,
 'SUGGESTION': 136,
 'RESPECT': 86,
 'ALTERNATIVE': 127,
 'FLY': 43,
 'STONE': 73,
 'RELATE': 61,
 'BURN': 55,
 'STAND': 58,
 'FINE': 34,
 'FIND': 33,
 'RESEARCH': 77,
 'TROUBLE': 93,
 'SHEET': 57,
 'JUST': 70,
 'ARRANGEMENT': 116,
 'TRY': 63,
 'PLACE': 37,
 'READING': 58,
 'MISS': 60,
 'USUAL': 74,
 'REVENUE': 90,
 'WEAK': 40,
 'SERIOUSLY': 143,
 'EFFECTIVELY': 118,
 'RECOVER': 86,
 'SHOE': 47,
 'ROUTE': 79,
 'CASH': 31,
 'BRIGHT': 64,
 'PROGRAM': 88,
 'DIRECTLY': 96,
 'SEXUAL': 82,
 'DISPLAY': 86,
 'NO': 29,
 'COMMUNITY': 133,
 'EMPHASIS': 90,
 'UNABLE': 55,
 'MASTER': 76,
 'SONG': 55,
 'ODD': 23,
 'ORIGIN': 72,
 'BUILDING': 78,
 'DRAW': 46,
 'RAPIDLY': 85,
 'CONSIDERATION': 146,
 'CONSTRUCTION': 171,
 'QUICKLY': 98,
 'ELSEWHERE': 100,
 'LEG': 24,
 'PROPORTION': 156,
 'SHOULD': 79,
 'LET': 37,
 'LAUGH': 49,
 'SECTOR': 80,
 'COFFEE': 40,
 'WHETHER': 87,
 'POLITICAL': 97,
 'PRISONER': 114,
 'COMPLETELY': 126,
 'MINISTER': 107,
 'ASPECT': 64,
 'SEEM': 42,
 'ARGUE': 52,
 'SEEK': 40,
 'EXCHANGE': 67,
 'WHEN': 50,
 'FIRM': 46,
 'FIRE': 38,
 'THERE': 56,
 'DISEASE': 62,
 'COMMITMENT': 125,
 'START': 78,
 'IMPOSSIBLE': 119,
 'HISTORY': 114,
 'OFFENCE': 54,
 'PRICE': 51,
 'SECOND': 60,
 'BRING': 50,
 'CHILD': 36,
 'JUSTICE': 87,
 'SIR': 46,
 'USEFUL': 84,
 'KNOWLEDGE': 96,
 'SIT': 48,
 'STRANGE': 84,
 'GAIN': 31,
 'VOICE': 54,
 'CUSTOMER': 114,
 'WOMAN': 66,
 'FORCE': 47,
 'TAX': 45,
 'WAR': 42,
 'ACTION': 62,
 'EXHIBITION': 115,
 'BODY': 46,
 'CRITICISM': 103,
 'FIGURE': 66,
 'ASSESS': 82,
 'ARTICLE': 68,
 'SIMILAR': 81,
 'BEAUTIFUL': 97,
 'LOOK': 53,
 'HOUSE': 68,
 'EXPRESS': 106,
 'INSTANCE': 85,
 'CHARGE': 42,
 'COLLEGE': 59,
 'RICH': 38,
 'CONSUMER': 108,
 'CONCERN': 72,
 'GREAT': 51,
 'USED': 49,
 'CAMPAIGN': 64,
 'PREFER': 68,
 'GUN': 42,
 'USER': 63,
 'DRAWING': 76,
 'MARKET': 68,
 'PREVENT': 100,
 'CONTRACT': 94,
 'CONSERVATIVE': 153,
 'BESIDE': 44,
 'CAREFULLY': 103,
 'POSITION': 117,
 'SPORT': 88,
 'TOTALLY': 105,
 'THANK': 54,
 'INDUSTRIAL': 127,
 'THREAT': 72,
 'CAPABLE': 40,
 'GENERATION': 108,
 'LOAN': 42,
 'DRIVER': 76,
 'SISTER': 90,
 'PROTECTION': 135,
 'VEHICLE': 64,
 'BABY': 30,
 'DESTROY': 106,
 'AGREE': 36,
 'SATISFY': 99,
 'TYPE': 66,
 'DELIVER': 75,
 'REMIND': 63,
 'SAY': 45,
 'PARTLY': 92,
 'STATION': 98,
 'RED': 27,
 'TRAINING': 92,
 'CAPACITY': 78,
 'WEATHER': 80,
 'CRY': 46,
 'COMMITTEE': 103,
 'ORGANIZATION': 149,
 'FRIEND': 56,
 'OUT': 56,
 'AFFORD': 50,
 'HAPPEN': 60,
 'AIR': 28,
 'STAGE': 52,
 'ACHIEVE': 53,
 'ADVANTAGE': 75,
 'DRESS': 65,
 'IMPLY': 75,
 'SO': 34,
 'UNEMPLOYMENT': 173,
 'PATTERN': 94,
 'CAT': 24,
 'STEP': 60,
 'UNDERSTAND': 120,
 'CAN': 18,
 'DATE': 30,
 'DATA': 26,
 'CORRECT': 82,
 'DRINK': 56,
 'EMPLOY': 86,
 'COAL': 31,
 'AMOUNT': 84,
 'RESPONSIBILITY': 192,
 'BLOOD': 48,
 'FURTHER': 96,
 'SECRETARY': 114,
 'SOMEBODY': 98,
 'STUDY': 89,
 'RAIN': 42,
 'PERIOD': 67,
 'INTENTION': 120,
 'OTHER': 66,
 ...}&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h4 id="Version-1"&gt;Version 1&lt;a class="anchor-link" href="http://louistiao.me/posts/project-euler/problem-42-coded-triangle-numbers/#Version-1"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [78]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;polygonal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;
        &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [81]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;triangle_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;triangle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;polygonal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;triangle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;triangle_set&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;triangle_set&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [82]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;count&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[82]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;162&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [85]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;count_polygonal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;polygonal_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;polygonal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;polygonal_set&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;polygonal_set&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [89]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;count_polygonal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[89]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;162&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [88]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;count_polygonal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[88]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;92&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h4 id="Version-2---Terse-but-less-efficient-/-readable"&gt;Version 2 - Terse but less efficient / readable&lt;a class="anchor-link" href="http://louistiao.me/posts/project-euler/problem-42-coded-triangle-numbers/#Version-2---Terse-but-less-efficient-/-readable"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [65]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;word_vals&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [68]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;max_word_val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word_vals&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;max_word_val&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[68]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;192&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [69]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;itertools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;takewhile&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [72]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;triangle_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;takewhile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;max_word_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;polygonal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt; &lt;span class="n"&gt;triangle_set&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[72]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;{1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78, 91, 105, 120, 136, 153, 171, 190}&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [75]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;triangle_set&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;word_vals&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[75]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;162&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [90]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;count_polygonal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;wd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;wd&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;takewhile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;max_word_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;polygonal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;))),&lt;/span&gt; &lt;span class="n"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [91]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;count_polygonal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[91]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;92&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h4 id="Version-3---Reduce-Triangle-number-test-to-Square-number-test"&gt;Version 3 - Reduce Triangle number test to Square number test&lt;a class="anchor-link" href="http://louistiao.me/posts/project-euler/problem-42-coded-triangle-numbers/#Version-3---Reduce-Triangle-number-test-to-Square-number-test"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [ ]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt; 
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [ ]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt; 
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
</description><category>ipython</category><category>project-euler</category><category>python</category><guid>http://louistiao.me/posts/project-euler/problem-42-coded-triangle-numbers/</guid><pubDate>Fri, 17 Apr 2015 14:31:37 GMT</pubDate></item><item><title>Project Euler Problem 43: Sub-string divisibility</title><link>http://louistiao.me/posts/project-euler/problem-43-sub-string-divisibility/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;The number, 1406357289, is a 0 to 9 pandigital number because it is made up of each of the digits 0 to 9 in some order, but it also has a rather interesting sub-string divisibility property.&lt;/p&gt;
&lt;p&gt;Let $d_1$ be the 1st digit, $d_2$ be the 2nd digit, and so on. In this way, we note the following:&lt;/p&gt;
&lt;p&gt;$d_2d_3d_4=406$ is divisible by 2&lt;/p&gt;
&lt;p&gt;$d_3d_4d_5=063$ is divisible by 3&lt;/p&gt;
&lt;p&gt;$d_4d_5d_6=635$ is divisible by 5&lt;/p&gt;
&lt;p&gt;$d_5d_6d_7=357$ is divisible by 7&lt;/p&gt;
&lt;p&gt;$d_6d_7d_8=572$ is divisible by 11&lt;/p&gt;
&lt;p&gt;$d_7d_8d_9=728$ is divisible by 13&lt;/p&gt;
&lt;p&gt;$d_8d_9d_{10}=289$ is divisible by 17&lt;/p&gt;
&lt;p&gt;Find the sum of all 0 to 9 pandigital numbers with this property.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h4 id="Version-1:-Brute-Force"&gt;Version 1: Brute-Force&lt;a class="anchor-link" href="http://louistiao.me/posts/project-euler/problem-43-sub-string-divisibility/#Version-1:-Brute-Force"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [1]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;itertools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;permutations&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;islice&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tee&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;izip&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [2]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;islice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;permutations&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[2]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;[(0, 1, 2, 3, 4, 5, 6, 7, 8, 9),
 (0, 1, 2, 3, 4, 5, 6, 7, 9, 8),
 (0, 1, 2, 3, 4, 5, 6, 8, 7, 9),
 (0, 1, 2, 3, 4, 5, 6, 8, 9, 7),
 (0, 1, 2, 3, 4, 5, 6, 9, 7, 8),
 (0, 1, 2, 3, 4, 5, 6, 9, 8, 7),
 (0, 1, 2, 3, 4, 5, 7, 6, 8, 9),
 (0, 1, 2, 3, 4, 5, 7, 6, 9, 8),
 (0, 1, 2, 3, 4, 5, 7, 8, 6, 9),
 (0, 1, 2, 3, 4, 5, 7, 8, 9, 6),
 (0, 1, 2, 3, 4, 5, 7, 9, 6, 8),
 (0, 1, 2, 3, 4, 5, 7, 9, 8, 6),
 (0, 1, 2, 3, 4, 5, 8, 6, 7, 9),
 (0, 1, 2, 3, 4, 5, 8, 6, 9, 7),
 (0, 1, 2, 3, 4, 5, 8, 7, 6, 9),
 (0, 1, 2, 3, 4, 5, 8, 7, 9, 6),
 (0, 1, 2, 3, 4, 5, 8, 9, 6, 7),
 (0, 1, 2, 3, 4, 5, 8, 9, 7, 6),
 (0, 1, 2, 3, 4, 5, 9, 6, 7, 8),
 (0, 1, 2, 3, 4, 5, 9, 6, 8, 7)]&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [3]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;nwise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iterable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;iters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iterable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iters&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;izip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;iters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [4]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;iterable_to_int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;iterable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;iterable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [15]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;pandigital_substring_divisible&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;digits&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;substring_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;divisors&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    Given n unique digits and specified substring &lt;/span&gt;
&lt;span class="sd"&gt;    size of m, a list of n-m+1 divisors are expected&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;permutations&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;digits&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;subs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iterable_to_int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nwise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;substring_size&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;any&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;m&lt;/span&gt;, subs, divisors)):
            &lt;span class="k"&gt;continue&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [13]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pandigital_substring_divisible&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[13]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;(1, 4, 0, 6, 3, 5, 7, 2, 8, 9)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [11]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;pandigital_nums&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pandigital_substring_divisible&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;]));&lt;/span&gt; &lt;span class="n"&gt;pandigital_nums&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[11]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;[(1, 4, 0, 6, 3, 5, 7, 2, 8, 9),
 (1, 4, 3, 0, 9, 5, 2, 8, 6, 7),
 (1, 4, 6, 0, 3, 5, 7, 2, 8, 9),
 (4, 1, 0, 6, 3, 5, 7, 2, 8, 9),
 (4, 1, 3, 0, 9, 5, 2, 8, 6, 7),
 (4, 1, 6, 0, 3, 5, 7, 2, 8, 9)]&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [12]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iterable_to_int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pandigital_nums&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[12]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;16695334890&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h4 id="Version-2:-Search-space-pruning-with-divisibility-tests"&gt;Version 2: Search space pruning with divisibility tests&lt;a class="anchor-link" href="http://louistiao.me/posts/project-euler/problem-43-sub-string-divisibility/#Version-2:-Search-space-pruning-with-divisibility-tests"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Coming Soon&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [ ]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt; 
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
</description><category>ipython</category><category>project-euler</category><category>python</category><guid>http://louistiao.me/posts/project-euler/problem-43-sub-string-divisibility/</guid><pubDate>Fri, 17 Apr 2015 12:52:15 GMT</pubDate></item><item><title>Project Euler Problem 44: Pentagon numbers</title><link>http://louistiao.me/posts/project-euler/problem-44-pentagon-numbers/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Pentagonal numbers are generated by the formula, $P_n=\frac{n(3n−1)}{2}$. The first ten pentagonal numbers are:&lt;/p&gt;
&lt;p&gt;1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...&lt;/p&gt;
&lt;p&gt;It can be seen that $P_4 + P_7 = 22 + 70 = 92 = P_8$. However, their difference, $70 − 22 = 48$, is not pentagonal.&lt;/p&gt;
&lt;p&gt;Find the pair of pentagonal numbers, $P_j$ and $P_k$, for which their sum and difference are pentagonal and $D = |P_k − P_j|$ is minimised; what is the value of $D$?&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [1]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;polygonal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;
        &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [2]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sum_diff_polygonal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;seen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;polygonal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;seen&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;
            &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;
            &lt;span class="c1"&gt;# we already know `p+q=i` is s-gonal &lt;/span&gt;
            &lt;span class="c1"&gt;# since `i` must be; just need to check &lt;/span&gt;
            &lt;span class="c1"&gt;# that `p` and `p-q` are as well&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;seen&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;seen&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;    
        &lt;span class="n"&gt;seen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [3]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sum_diff_polygonal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [4]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[4]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;(7042750, 1560090)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [13]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sum_diff_polygonal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;seen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;polygonal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;seen&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;seen&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;seen&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;  
        &lt;span class="n"&gt;seen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [14]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sum_diff_polygonal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [15]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[15]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;(7042750, 1560090)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [16]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sum_diff_polygonal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [17]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[17]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;(21, 15)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [18]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[18]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;(171, 105)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [19]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;itertools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;islice&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [25]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;islice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;polygonal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt output_prompt"&gt;Out[25]:&lt;/div&gt;


&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;[1,
 3,
 6,
 10,
 15,
 21,
 28,
 36,
 45,
 55,
 66,
 78,
 91,
 105,
 120,
 136,
 153,
 171,
 190,
 210,
 231,
 253,
 276,
 300,
 325]&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h4 id="TODO:-Prove-minimality-of-$|-P_k---P_j-|$"&gt;TODO: Prove minimality of $| P_k - P_j |$&lt;a class="anchor-link" href="http://louistiao.me/posts/project-euler/problem-44-pentagon-numbers/#TODO:-Prove-minimality-of-%24%7C-P_k---P_j-%7C%24"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;If we have $k$ such that $P_k$ is triangular and there is only one $j 

&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [ ]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython2"&gt;&lt;pre&gt; 
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
</description><category>ipython</category><category>project-euler</category><category>python</category><guid>http://louistiao.me/posts/project-euler/problem-44-pentagon-numbers/</guid><pubDate>Wed, 08 Apr 2015 03:54:47 GMT</pubDate></item></channel></rss>