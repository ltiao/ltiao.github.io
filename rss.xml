<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Louis Tiao</title><link>http://louistiao.me/</link><description>Computer Science / Math / Software Engineering</description><atom:link type="application/rss+xml" rel="self" href="http://louistiao.me/rss.xml"></atom:link><language>en</language><lastBuildDate>Tue, 29 Mar 2016 00:33:22 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Workflow for keeping Nikola config file updated</title><link>http://louistiao.me/posts/workflow-for-keeping-nikola-config-file-updated/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;For most, keeping Nikola up-to-date is usually a simple matter of running
something like:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_b3bc50b75fb24e60bcfa85ce5467eb95-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pip install --upgrade nikola
&lt;/pre&gt;&lt;p&gt;The same goes for its dependencies. However, one important thing that can get
overlooked is the Nikola configuration file for your site (the &lt;tt class="docutils literal"&gt;conf.py&lt;/tt&gt; file
sitting at the root of your Nikola site directory), which is almost always
updated with each major Nikola release.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://louistiao.me/posts/workflow-for-keeping-nikola-config-file-updated/"&gt;Read moreâ€¦&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>meld</category><category>nikola</category><category>pip</category><category>python</category><guid>http://louistiao.me/posts/workflow-for-keeping-nikola-config-file-updated/</guid><pubDate>Tue, 29 Mar 2016 00:13:12 GMT</pubDate></item><item><title>Louis does dotfiles... again</title><link>http://louistiao.me/posts/louis-does-dotfiles-again/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;div class="section" id="switching-to-zsh"&gt;
&lt;h2&gt;Switching to Zsh&lt;/h2&gt;
&lt;p&gt;First I created a &lt;a class="reference external" href="https://github.com/ltiao/oh-my-zsh"&gt;fork&lt;/a&gt; of &lt;a class="reference external" href="https://github.com/robbyrussell/oh-my-zsh"&gt;Oh My Zsh&lt;/a&gt; and added it as a submodule to my
existing &lt;a class="reference external" href="https://github.com/ltiao/dotfiles"&gt;dotfiles repository&lt;/a&gt; under a directory named &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;.oh-my-zsh&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_27957e330d55489a8d26f956ab133d1b-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/Dropbox/dotfiles
&lt;a name="rest_code_27957e330d55489a8d26f956ab133d1b-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git submodule add https://github.com/ltiao/oh-my-zsh.git .oh-my-zsh
&lt;/pre&gt;&lt;p&gt;Since my dotfiles repo is a fork of &lt;a class="reference external" href="https://github.com/mathiasbynens/dotfiles"&gt;Mathias Bynen's dotfiles&lt;/a&gt;, which is
primarily for &lt;tt class="docutils literal"&gt;bash&lt;/tt&gt;, there shouldn't be any conflicts. In fact, we should
be able to switch seamlessly between using &lt;tt class="docutils literal"&gt;zsh&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;bash&lt;/tt&gt; as the default
shell.&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_305bae04290246918051d7a7510ee766-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; cp .oh-my-zsh/templates/zshrc.zsh-template .zshrc
&lt;a name="rest_code_305bae04290246918051d7a7510ee766-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; vim .zshrc
&lt;/pre&gt;&lt;pre class="code bash"&gt;&lt;a name="rest_code_220d7a670cc04ad9996b22c700f7f583-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;ZSH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/Dropbox/dotfiles/.oh-my-zsh
&lt;/pre&gt;&lt;p&gt;Add or modify files in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;.oh-my-zsh/custom&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Commit and push&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_bd9cf14967d6493d90b151cace4ce5f3-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; stow --simulate --verbose&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; --ignore&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'(gitmodules|oh-my-zsh)'&lt;/span&gt; --dir&lt;span class="o"&gt;=&lt;/span&gt;/Users/ltiao/Dropbox dotfiles
&lt;a name="rest_code_bd9cf14967d6493d90b151cace4ce5f3-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; stow --verbose&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; --ignore&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'(gitmodules|oh-my-zsh)'&lt;/span&gt; --dir&lt;span class="o"&gt;=&lt;/span&gt;/Users/ltiao/Dropbox dotfiles
&lt;a name="rest_code_bd9cf14967d6493d90b151cace4ce5f3-3"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; chsh -s /bin/zsh
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="switching-to-iterm2"&gt;
&lt;h2&gt;Switching to iTerm2&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Download and install &lt;a class="reference external" href="https://www.iterm2.com/"&gt;iTerm2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Key shortcuts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://github.com/altercation/solarized/tree/master/iterm2-colors-solarized"&gt;Solarized Dark&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_a0bcdf37aea84957939993b6ced3da68-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; curl -o &lt;span class="s2"&gt;"Solarized Dark.itermcolors"&lt;/span&gt; https://raw.githubusercontent.com/altercation/solarized/master/iterm2-colors-solarized/Solarized%20Dark.itermcolors
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://colorsublime.com/theme/Tomorrow_Night_Eighties"&gt;Tomorrow Night Eighties&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_f3ac124614d940149eafe9c7a4af255f-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; curl -o &lt;span class="s2"&gt;"Tomorrow Night Eighties.itermcolors"&lt;/span&gt; https://raw.githubusercontent.com/chriskempson/tomorrow-theme/master/iTerm2/Tomorrow%20Night%20Eighties.itermcolors
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;Background Opacity&lt;/li&gt;
&lt;li&gt;Background dimming, animation&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="themes"&gt;
&lt;h2&gt;Themes&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/caiogondim/bullet-train-oh-my-zsh-theme"&gt;Bullet Train for oh-my-zsh&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_63fa265f5bed45a3b630482a149e7222-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; .oh-my-zsh/custom/themes/
&lt;a name="rest_code_63fa265f5bed45a3b630482a149e7222-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; curl -O https://raw.githubusercontent.com/caiogondim/bullet-train-oh-my-zsh-theme/master/bullet-train.zsh-theme
&lt;/pre&gt;&lt;pre class="code bash"&gt;&lt;a name="rest_code_eddf13cd1a9f410ea6fd36e5ea85488f-1"&gt;&lt;/a&gt;&lt;span class="nv"&gt;ZSH_THEME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"bullet-train"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="powerline-compatible-fonts"&gt;
&lt;h2&gt;Powerline-compatible Fonts&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Download &lt;a class="reference external" href="https://github.com/powerline/fonts/archive/master.zip"&gt;Powerline fonts&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Install a font. "Meslo LG S Regular for Powerline" is probably just as good
as any.&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://louistiao.me/images/install_font.png"&gt;&lt;img alt="../../images/install_font.thumbnail.png" class="align-center" src="http://louistiao.me/images/install_font.thumbnail.png"&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Configure iTerm2 to use font&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://louistiao.me/images/iterm2_font.png"&gt;&lt;img alt="../../images/iterm2_font.thumbnail.png" class="align-center" src="http://louistiao.me/images/iterm2_font.thumbnail.png"&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="further-readings"&gt;
&lt;h2&gt;Further Readings&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://hiltmon.com/blog/2013/02/13/make-iterm-2-more-mac-like/"&gt;http://hiltmon.com/blog/2013/02/13/make-iterm-2-more-mac-like/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://ruigomes.me/blog/perfect-iterm-osx-terminal-installation/"&gt;https://ruigomes.me/blog/perfect-iterm-osx-terminal-installation/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/6801594/word-jumping-in-iterm2-or-terminal-in-osx-lion"&gt;http://stackoverflow.com/questions/6801594/word-jumping-in-iterm2-or-terminal-in-osx-lion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/powerline/fonts"&gt;https://github.com/powerline/fonts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://powerline.readthedocs.org/en/latest/installation/osx.html#fonts-installation"&gt;https://powerline.readthedocs.org/en/latest/installation/osx.html#fonts-installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://gist.github.com/agnoster/3712874"&gt;https://gist.github.com/agnoster/3712874&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><guid>http://louistiao.me/posts/louis-does-dotfiles-again/</guid><pubDate>Sun, 21 Feb 2016 12:14:18 GMT</pubDate></item><item><title>Creating custom (Unix) fortunes</title><link>http://louistiao.me/posts/creating-custom-unix-fortunes/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;Like others, I include &lt;tt class="docutils literal"&gt;fortune&lt;/tt&gt; in my &lt;tt class="docutils literal"&gt;.bash_profile&lt;/tt&gt; so that I am
greeted with a random, witty and thought-provoking epigram upon starting a
new shell session. Eventually, however, I found most of the epigrams to be
mostly trite and vapid, and quickly grew tired of them. Instead of tinkering
with the probabilities of sampling from the various datafiles available, I
decided to roll with my own epigram datafile.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://louistiao.me/posts/creating-custom-unix-fortunes/"&gt;Read moreâ€¦&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>bash</category><category>cowsay</category><category>fortune</category><category>gtd</category><category>lolcat</category><category>unix</category><guid>http://louistiao.me/posts/creating-custom-unix-fortunes/</guid><pubDate>Wed, 17 Feb 2016 14:15:42 GMT</pubDate></item><item><title>Louis does dotfiles</title><link>http://louistiao.me/posts/louis-does-dotfiles/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;a class="reference external image-reference" href="http://louistiao.me/images/bash.png"&gt;&lt;img alt="../../images/bash.thumbnail.png" class="align-center" src="http://louistiao.me/images/bash.thumbnail.png"&gt;&lt;/a&gt;
&lt;p&gt;For a long time, I kept a small set of minimalistic dotfiles
(&lt;tt class="docutils literal"&gt;.bash_profile&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;.gitconfig&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;.vimrc&lt;/tt&gt;). You probably couldn't find
anything in my &lt;tt class="docutils literal"&gt;.bash_profile&lt;/tt&gt; other than exports and path definitions that
were absolutely necessary to get tools such as &lt;a class="reference external" href="http://brew.sh/"&gt;Homebrew&lt;/a&gt; and
&lt;a class="reference external" href="https://virtualenvwrapper.readthedocs.org/en/latest/"&gt;virtualenvwrapper&lt;/a&gt; to work. Furthermore, I was dismissive towards spending
any significant amount of time down the rabbit hole of perpetual dotfile
customization and optimization.&lt;/p&gt;
&lt;p&gt;Recently, while digging through my bookmarks saved from months ago, I came
across &lt;a class="reference external" href="https://dotfiles.github.io/"&gt;GitHub does dotfiles&lt;/a&gt;. Needless to say, after perusing through some
of the most popular dotfiles, dotfile utilities and tutorials, I came away
quite impressed. It disabused me of my previous misbelief that dotfile
calibration is ultimately a fruitless and ceaseless task, and I decided to
give it another shot.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://louistiao.me/posts/louis-does-dotfiles/"&gt;Read moreâ€¦&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>dotfiles</category><category>git</category><category>github</category><category>gnu stow</category><category>osx</category><guid>http://louistiao.me/posts/louis-does-dotfiles/</guid><pubDate>Fri, 12 Feb 2016 11:59:46 GMT</pubDate></item><item><title>Adding __name__ and __doc__ attributes to functools.partial objects</title><link>http://louistiao.me/posts/adding-__name__-and-__doc__-attributes-to-functoolspartial-objects/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_52d4d3162d0f43849120b863e8983a72-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_52d4d3162d0f43849120b863e8983a72-2"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""Sum squared error function"""&lt;/span&gt;
&lt;a name="rest_code_52d4d3162d0f43849120b863e8983a72-3"&gt;&lt;/a&gt;    &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
&lt;a name="rest_code_52d4d3162d0f43849120b863e8983a72-4"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_6aa74efb1c4d4416b6dee8124fc9a84f-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;partial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;update_wrapper&lt;/span&gt;
&lt;a name="rest_code_6aa74efb1c4d4416b6dee8124fc9a84f-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_6aa74efb1c4d4416b6dee8124fc9a84f-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapped_partial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_6aa74efb1c4d4416b6dee8124fc9a84f-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;partial_func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;partial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6aa74efb1c4d4416b6dee8124fc9a84f-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;update_wrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;partial_func&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6aa74efb1c4d4416b6dee8124fc9a84f-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;partial_func&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pymotw.com/2/functools/"&gt;https://pymotw.com/2/functools/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/2/library/functools.html"&gt;https://docs.python.org/2/library/functools.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><guid>http://louistiao.me/posts/adding-__name__-and-__doc__-attributes-to-functoolspartial-objects/</guid><pubDate>Mon, 08 Feb 2016 03:42:56 GMT</pubDate></item><item><title>Using the Matplotlib plot directive in Nikola</title><link>http://louistiao.me/posts/using-the-matplotlib-plot-directive-in-nikola/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;Matplotlib's &lt;a class="reference external" href="http://matplotlib.org/1.5.1/devel/documenting_mpl.html?highlight=directive#module-matplotlib.sphinxext.plot_directive"&gt;plot directive&lt;/a&gt; is an immensely useful &lt;a class="reference external" href="http://www.sphinx-doc.org/en/stable/extensions.html"&gt;Sphinx extension&lt;/a&gt; for
easily embedding plots within your documentation. It allows you to include
source code for generating a matplotlib plot, either inline or by providing
the path to a source file. By default, the HTML documentation that is
generated will display a PNG of the plot, and also provide links to the source
code for generating the plot, a high-resolution PNG, and also a vector graphic
(PDF).&lt;/p&gt;
&lt;p&gt;&lt;a href="http://louistiao.me/posts/using-the-matplotlib-plot-directive-in-nikola/"&gt;Read moreâ€¦&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>matplotlib</category><category>nikola</category><guid>http://louistiao.me/posts/using-the-matplotlib-plot-directive-in-nikola/</guid><pubDate>Tue, 02 Feb 2016 11:58:11 GMT</pubDate></item><item><title>Python SimpleHTTPServer Recipe: Serve specific directory</title><link>http://louistiao.me/posts/python-simplehttpserver-recipe-serve-specific-directory/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;ul class="simple"&gt;
&lt;li&gt;We need to be able to pass the path to the root of the directory tree we wish
to serve.&lt;/li&gt;
&lt;li&gt;We can only pass arguments to the &lt;tt class="docutils literal"&gt;ServerClass&lt;/tt&gt; and not &lt;tt class="docutils literal"&gt;HandlerClass&lt;/tt&gt;.
Note however that &lt;tt class="docutils literal"&gt;HandlerClass&lt;/tt&gt; is passed as an argument to &lt;tt class="docutils literal"&gt;ServerClass&lt;/tt&gt;
so we should be able to propagate the argument to &lt;tt class="docutils literal"&gt;HandlerClass&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;tt class="docutils literal"&gt;translate_path&lt;/tt&gt; method of &lt;tt class="docutils literal"&gt;SimpleHTTPRequestHandler&lt;/tt&gt; takes the
&lt;tt class="docutils literal"&gt;/&lt;/tt&gt;-separated path specified in the URL and prepends &lt;tt class="docutils literal"&gt;os.getcwd()&lt;/tt&gt; to it.
We just have to instead prepend the  argument we propagated to
&lt;tt class="docutils literal"&gt;SimpleHTTPRequestHandler&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;Lastly we modify the &lt;tt class="docutils literal"&gt;test&lt;/tt&gt; function to take multiple optional arguments
(port and base path) using the excellent module &lt;tt class="docutils literal"&gt;argparse&lt;/tt&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://louistiao.me/posts/python-simplehttpserver-recipe-serve-specific-directory/"&gt;Read moreâ€¦&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>python</category><guid>http://louistiao.me/posts/python-simplehttpserver-recipe-serve-specific-directory/</guid><pubDate>Thu, 10 Dec 2015 06:38:27 GMT</pubDate></item><item><title>Python SimpleHTTPServer Recipe: Enable CORS</title><link>http://louistiao.me/posts/python-simplehttpserver-recipe-enable-cors/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;Create a file, let's call it &lt;tt class="docutils literal"&gt;cors_http_server.py&lt;/tt&gt;, with the code below:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-1"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#! /usr/bin/env python&lt;/span&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;SimpleHTTPServer&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SimpleHTTPRequestHandler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CORSHTTPRequestHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SimpleHTTPRequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;end_headers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-9"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Access-Control-Allow-Origin'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-10"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CORSHTTPRequestHandler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end_headers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-12"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_b579c476b8224c789d79f58fbc1a5bf4-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HandlerClass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;CORSHTTPRequestHandler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="http://louistiao.me/posts/python-simplehttpserver-recipe-enable-cors/"&gt;Read moreâ€¦&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cors</category><category>python</category><guid>http://louistiao.me/posts/python-simplehttpserver-recipe-enable-cors/</guid><pubDate>Thu, 10 Dec 2015 04:56:08 GMT</pubDate></item><item><title>Installing lxml on Mac OSX (10.11) inside a virtualenv with pip</title><link>http://louistiao.me/posts/installing-lxml-on-mac-osx-1011-inside-a-virtualenv-with-pip/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;The &lt;tt class="docutils literal"&gt;lxml&lt;/tt&gt; library is a dependency for many popular Python projects such as
Scrapy and Nikola. If you are a Mac OSX user, it's highly likely that you have
encountered the following error when trying to install &lt;tt class="docutils literal"&gt;lxml&lt;/tt&gt; or its
dependants with &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_edbbffc04cb94cb68e13576a0325e90d-1"&gt;&lt;/a&gt;&lt;span class="go"&gt;In file included from src/lxml/lxml.etree.c:346:&lt;/span&gt;
&lt;a name="rest_code_edbbffc04cb94cb68e13576a0325e90d-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt;WORKON_HOME/venv_name/build/lxml/src/lxml/includes/etree_defs.h:9:10: fatal error: &lt;span class="s1"&gt;'libxml/xmlversion.h'&lt;/span&gt; file not found
&lt;a name="rest_code_edbbffc04cb94cb68e13576a0325e90d-3"&gt;&lt;/a&gt;&lt;span class="gp"&gt;#&lt;/span&gt;include &lt;span class="s2"&gt;"libxml/xmlversion.h"&lt;/span&gt;
&lt;a name="rest_code_edbbffc04cb94cb68e13576a0325e90d-4"&gt;&lt;/a&gt;&lt;span class="go"&gt;         ^&lt;/span&gt;
&lt;a name="rest_code_edbbffc04cb94cb68e13576a0325e90d-5"&gt;&lt;/a&gt;&lt;span class="go"&gt;1 error generated.&lt;/span&gt;
&lt;a name="rest_code_edbbffc04cb94cb68e13576a0325e90d-6"&gt;&lt;/a&gt;&lt;span class="go"&gt;error: command 'clang' failed with exit status 1&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="http://louistiao.me/posts/installing-lxml-on-mac-osx-1011-inside-a-virtualenv-with-pip/"&gt;Read moreâ€¦&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>lxml</category><category>mac</category><category>osx</category><category>pip</category><category>python</category><category>virtualenv</category><guid>http://louistiao.me/posts/installing-lxml-on-mac-osx-1011-inside-a-virtualenv-with-pip/</guid><pubDate>Tue, 01 Dec 2015 03:04:57 GMT</pubDate></item><item><title>NumPy mgrid vs. meshgrid</title><link>http://louistiao.me/posts/numpy-mgrid-vs-meshgrid/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;The &lt;a class="reference external" href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.meshgrid.html"&gt;meshgrid&lt;/a&gt; function is useful for creating coordinate arrays to
vectorize function evaluations over a grid. Experienced NumPy users will have
noticed some discrepancy between &lt;tt class="docutils literal"&gt;meshgrid&lt;/tt&gt; and the &lt;a class="reference external" href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.mgrid.html"&gt;mgrid&lt;/a&gt;, a function
that is used just as often, for exactly the same purpose. What is the
discrepancy, and why does a discrepancy even exist when &lt;em&gt;"there should be one
- and preferably only one - obvious way to do it."&lt;/em&gt; &lt;a class="footnote-reference" href="http://louistiao.me/posts/numpy-mgrid-vs-meshgrid/#id2" id="id1"&gt;[1]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;First, recall that &lt;tt class="docutils literal"&gt;meshgrid&lt;/tt&gt; behaves as follows:&lt;/p&gt;
&lt;pre class="code pycon"&gt;&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;meshgrid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-3"&gt;&lt;/a&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;
&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-4"&gt;&lt;/a&gt;&lt;span class="go"&gt;array([[1, 3, 5, 7, 9],&lt;/span&gt;
&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-5"&gt;&lt;/a&gt;&lt;span class="go"&gt;       [1, 3, 5, 7, 9],&lt;/span&gt;
&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-6"&gt;&lt;/a&gt;&lt;span class="go"&gt;       [1, 3, 5, 7, 9]])&lt;/span&gt;
&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-7"&gt;&lt;/a&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;y1&lt;/span&gt;
&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-8"&gt;&lt;/a&gt;&lt;span class="go"&gt;array([[-12, -12, -12, -12, -12],&lt;/span&gt;
&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-9"&gt;&lt;/a&gt;&lt;span class="go"&gt;       [ -9,  -9,  -9,  -9,  -9],&lt;/span&gt;
&lt;a name="rest_code_22765e07fea54b5db24c6300405dbd12-10"&gt;&lt;/a&gt;&lt;span class="go"&gt;       [ -6,  -6,  -6,  -6,  -6]])&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="http://louistiao.me/posts/numpy-mgrid-vs-meshgrid/"&gt;Read moreâ€¦&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>numpy</category><category>python</category><guid>http://louistiao.me/posts/numpy-mgrid-vs-meshgrid/</guid><pubDate>Fri, 30 Oct 2015 05:00:19 GMT</pubDate></item></channel></rss>