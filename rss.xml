<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Louis Tiao</title><link>http://louistiao.me/</link><description>Computer Science / Math / Software Engineering</description><atom:link href="http://louistiao.me/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Wed, 03 Feb 2016 12:41:36 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Using the Matplotlib plot directive in Nikola</title><link>http://louistiao.me/posts/using-the-matplotlib-plot-directive-in-nikola/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;Matplotlib's &lt;a class="reference external" href="http://matplotlib.org/1.5.1/devel/documenting_mpl.html?highlight=directive#module-matplotlib.sphinxext.plot_directive"&gt;plot directive&lt;/a&gt; is an immensely useful &lt;a class="reference external" href="http://www.sphinx-doc.org/en/stable/extensions.html"&gt;Sphinx extension&lt;/a&gt; for
easily embedding plots within your documentation. It allows you to include
source code for generating a matplotlib plot, either inline or by providing
the path to a source file. By default, the HTML documentation that is
generated will display a PNG of the plot, and also provide links to the source
code for generating the plot, a high-resolution PNG, and also a vector graphic
(PDF).&lt;/p&gt;
&lt;p&gt;In this article, we try out the Nikola plugin &lt;a class="reference external" href="https://plugins.getnikola.com/#pyplots"&gt;pyplots&lt;/a&gt;, which is a (lite)
implementation of the matplotlib's &lt;tt class="docutils literal"&gt;plot&lt;/tt&gt; directive.&lt;/p&gt;
&lt;p&gt;First, we install the plugin:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_9a05a656b19d49b0bb46470ff786c883-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; nikola plugin --install pyplots
&lt;/pre&gt;&lt;p&gt;This will also install matplotlib and any dependencies. Now let's try out
a &lt;a class="reference external" href="http://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#surface-plots"&gt;3D surface plot example&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;mpl_toolkits.mplot3d&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Axes3D&lt;/span&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.ticker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LinearLocator&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FormatStrFormatter&lt;/span&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-6"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;fig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-9"&gt;&lt;/a&gt;&lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;axes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;projection&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'3d'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-11"&gt;&lt;/a&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-12"&gt;&lt;/a&gt;&lt;span class="n"&gt;Y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-13"&gt;&lt;/a&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;meshgrid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-14"&gt;&lt;/a&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-15"&gt;&lt;/a&gt;&lt;span class="n"&gt;Z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-16"&gt;&lt;/a&gt;&lt;span class="n"&gt;surf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot_surface&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rstride&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cstride&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;coolwarm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-17"&gt;&lt;/a&gt;                       &lt;span class="n"&gt;linewidth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;antialiased&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-18"&gt;&lt;/a&gt;&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_zlim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.01&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.01&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-19"&gt;&lt;/a&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-20"&gt;&lt;/a&gt;&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zaxis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_major_locator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LinearLocator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-21"&gt;&lt;/a&gt;&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zaxis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_major_formatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FormatStrFormatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%.02f&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-22"&gt;&lt;/a&gt;
&lt;a name="rest_code_eefd71587caf4c199fed323badc9610f-23"&gt;&lt;/a&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;colorbar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;surf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shrink&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;aspect&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;object data="http://louistiao.me/pyplots/d948383022c5bd0fb7ba0483dc6c44a4.svg" type="image/svg+xml"&gt;
/pyplots/d948383022c5bd0fb7ba0483dc6c44a4.svg&lt;/object&gt;
&lt;p&gt;Unlike the &lt;a class="reference external" href="http://matplotlib.org/1.5.1/devel/documenting_mpl.html?highlight=directive#module-matplotlib.sphinxext.plot_directive"&gt;plot directive&lt;/a&gt;, which is highly flexible, this plugin does not
support any configuration options whatsoever. This means that useful options
such as &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;include-source&lt;/span&gt;&lt;/tt&gt;, which displays the source inline, is not supported.
Furthermore, the plugin offers no alternative solution for providing this
functionality.&lt;/p&gt;
&lt;p&gt;Another difference, which could argued to be a strength rather than a
shortcoming, is that it only outputs SVG. Compared to the multitude of output
formats that the matplotlib Sphinx extension provides, it does leave
much to be desired. While this is not a deal-breaker, it certainly highlights
important differences between the behavior of this plugin and the matplotlib
Sphinx extension it is supposed to implement.&lt;/p&gt;&lt;/div&gt;</description><category>matplotlib</category><category>nikola</category><guid>http://louistiao.me/posts/using-the-matplotlib-plot-directive-in-nikola/</guid><pubDate>Tue, 02 Feb 2016 11:58:11 GMT</pubDate></item><item><title>Python SimpleHTTPServer Recipe: Serve specific directory</title><link>http://louistiao.me/posts/python-simplehttpserver-recipe-serve-specific-directory/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;ul class="simple"&gt;
&lt;li&gt;We need to be able to pass the path to the root of the directory tree we wish
to serve.&lt;/li&gt;
&lt;li&gt;We can only pass arguments to the &lt;tt class="docutils literal"&gt;ServerClass&lt;/tt&gt; and not &lt;tt class="docutils literal"&gt;HandlerClass&lt;/tt&gt;.
Note however that &lt;tt class="docutils literal"&gt;HandlerClass&lt;/tt&gt; is passed as an argument to &lt;tt class="docutils literal"&gt;ServerClass&lt;/tt&gt;
so we should be able to propagate the argument to &lt;tt class="docutils literal"&gt;HandlerClass&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;tt class="docutils literal"&gt;translate_path&lt;/tt&gt; method of &lt;tt class="docutils literal"&gt;SimpleHTTPRequestHandler&lt;/tt&gt; takes the
&lt;tt class="docutils literal"&gt;/&lt;/tt&gt;-separated path specified in the URL and prepends &lt;tt class="docutils literal"&gt;os.getcwd()&lt;/tt&gt; to it.
We just have to instead prepend the  argument we propagated to
&lt;tt class="docutils literal"&gt;SimpleHTTPRequestHandler&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;Lastly we modify the &lt;tt class="docutils literal"&gt;test&lt;/tt&gt; function to take multiple optional arguments
(port and base path) using the excellent module &lt;tt class="docutils literal"&gt;argparse&lt;/tt&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://louistiao.me/posts/python-simplehttpserver-recipe-serve-specific-directory/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>python</category><guid>http://louistiao.me/posts/python-simplehttpserver-recipe-serve-specific-directory/</guid><pubDate>Thu, 10 Dec 2015 06:38:27 GMT</pubDate></item><item><title>Python SimpleHTTPServer Recipe: Enable CORS</title><link>http://louistiao.me/posts/python-simplehttpserver-recipe-enable-cors/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;Create a file, let's call it &lt;tt class="docutils literal"&gt;cors_http_server.py&lt;/tt&gt;, with the code below:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_caccf4336fe84307b659f3b1f736d346-1"&gt;&lt;/a&gt;&lt;span class="ch"&gt;#! /usr/bin/env python&lt;/span&gt;
&lt;a name="rest_code_caccf4336fe84307b659f3b1f736d346-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_caccf4336fe84307b659f3b1f736d346-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;SimpleHTTPServer&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SimpleHTTPRequestHandler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;
&lt;a name="rest_code_caccf4336fe84307b659f3b1f736d346-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_caccf4336fe84307b659f3b1f736d346-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_caccf4336fe84307b659f3b1f736d346-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CORSHTTPRequestHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SimpleHTTPRequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_caccf4336fe84307b659f3b1f736d346-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_caccf4336fe84307b659f3b1f736d346-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;end_headers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_caccf4336fe84307b659f3b1f736d346-9"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Access-Control-Allow-Origin'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_caccf4336fe84307b659f3b1f736d346-10"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CORSHTTPRequestHandler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end_headers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_caccf4336fe84307b659f3b1f736d346-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_caccf4336fe84307b659f3b1f736d346-12"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_caccf4336fe84307b659f3b1f736d346-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HandlerClass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;CORSHTTPRequestHandler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="http://louistiao.me/posts/python-simplehttpserver-recipe-enable-cors/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cors</category><category>python</category><guid>http://louistiao.me/posts/python-simplehttpserver-recipe-enable-cors/</guid><pubDate>Thu, 10 Dec 2015 04:56:08 GMT</pubDate></item><item><title>Installing lxml on Mac OSX (10.11) inside a virtualenv with pip</title><link>http://louistiao.me/posts/installing-lxml-on-mac-osx-1011-inside-a-virtualenv-with-pip/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;The &lt;tt class="docutils literal"&gt;lxml&lt;/tt&gt; library is a dependency for many popular Python projects such as
Scrapy and Nikola. If you are a Mac OSX user, it's highly likely that you have
encountered the following error when trying to install &lt;tt class="docutils literal"&gt;lxml&lt;/tt&gt; or its
dependants with &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_7f43fb5789cc4473b2724417fb3a862f-1"&gt;&lt;/a&gt;&lt;span class="go"&gt;In file included from src/lxml/lxml.etree.c:346:&lt;/span&gt;
&lt;a name="rest_code_7f43fb5789cc4473b2724417fb3a862f-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt;WORKON_HOME/venv_name/build/lxml/src/lxml/includes/etree_defs.h:9:10: fatal error: &lt;span class="s1"&gt;'libxml/xmlversion.h'&lt;/span&gt; file not found
&lt;a name="rest_code_7f43fb5789cc4473b2724417fb3a862f-3"&gt;&lt;/a&gt;&lt;span class="gp"&gt;#&lt;/span&gt;include &lt;span class="s2"&gt;"libxml/xmlversion.h"&lt;/span&gt;
&lt;a name="rest_code_7f43fb5789cc4473b2724417fb3a862f-4"&gt;&lt;/a&gt;&lt;span class="go"&gt;         ^&lt;/span&gt;
&lt;a name="rest_code_7f43fb5789cc4473b2724417fb3a862f-5"&gt;&lt;/a&gt;&lt;span class="go"&gt;1 error generated.&lt;/span&gt;
&lt;a name="rest_code_7f43fb5789cc4473b2724417fb3a862f-6"&gt;&lt;/a&gt;&lt;span class="go"&gt;error: command 'clang' failed with exit status 1&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="http://louistiao.me/posts/installing-lxml-on-mac-osx-1011-inside-a-virtualenv-with-pip/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>lxml</category><category>mac</category><category>osx</category><category>pip</category><category>python</category><category>virtualenv</category><guid>http://louistiao.me/posts/installing-lxml-on-mac-osx-1011-inside-a-virtualenv-with-pip/</guid><pubDate>Tue, 01 Dec 2015 03:04:57 GMT</pubDate></item><item><title>NumPy mgrid vs. meshgrid</title><link>http://louistiao.me/posts/numpy-mgrid-vs-meshgrid/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;The &lt;a class="reference external" href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.meshgrid.html"&gt;meshgrid&lt;/a&gt; function is useful for creating coordinate arrays to
vectorize function evaluations over a grid. Experienced NumPy users will have
noticed some discrepancy between &lt;tt class="docutils literal"&gt;meshgrid&lt;/tt&gt; and the &lt;a class="reference external" href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.mgrid.html"&gt;mgrid&lt;/a&gt;, a function
that is used just as often, for exactly the same purpose. What is the
discrepancy, and why does a discrepancy even exist when &lt;em&gt;"there should be one
- and preferably only one - obvious way to do it."&lt;/em&gt; &lt;a class="footnote-reference" href="http://louistiao.me/posts/numpy-mgrid-vs-meshgrid/#id2" id="id1"&gt;[1]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;First, recall that &lt;tt class="docutils literal"&gt;meshgrid&lt;/tt&gt; behaves as follows:&lt;/p&gt;
&lt;pre class="code pycon"&gt;&lt;a name="rest_code_ed453eacca9741ed986a2abe5eb7647a-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;a name="rest_code_ed453eacca9741ed986a2abe5eb7647a-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;meshgrid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_ed453eacca9741ed986a2abe5eb7647a-3"&gt;&lt;/a&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;
&lt;a name="rest_code_ed453eacca9741ed986a2abe5eb7647a-4"&gt;&lt;/a&gt;&lt;span class="go"&gt;array([[1, 3, 5, 7, 9],&lt;/span&gt;
&lt;a name="rest_code_ed453eacca9741ed986a2abe5eb7647a-5"&gt;&lt;/a&gt;&lt;span class="go"&gt;       [1, 3, 5, 7, 9],&lt;/span&gt;
&lt;a name="rest_code_ed453eacca9741ed986a2abe5eb7647a-6"&gt;&lt;/a&gt;&lt;span class="go"&gt;       [1, 3, 5, 7, 9]])&lt;/span&gt;
&lt;a name="rest_code_ed453eacca9741ed986a2abe5eb7647a-7"&gt;&lt;/a&gt;&lt;span class="gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="n"&gt;y1&lt;/span&gt;
&lt;a name="rest_code_ed453eacca9741ed986a2abe5eb7647a-8"&gt;&lt;/a&gt;&lt;span class="go"&gt;array([[-12, -12, -12, -12, -12],&lt;/span&gt;
&lt;a name="rest_code_ed453eacca9741ed986a2abe5eb7647a-9"&gt;&lt;/a&gt;&lt;span class="go"&gt;       [ -9,  -9,  -9,  -9,  -9],&lt;/span&gt;
&lt;a name="rest_code_ed453eacca9741ed986a2abe5eb7647a-10"&gt;&lt;/a&gt;&lt;span class="go"&gt;       [ -6,  -6,  -6,  -6,  -6]])&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="http://louistiao.me/posts/numpy-mgrid-vs-meshgrid/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>numpy</category><category>python</category><guid>http://louistiao.me/posts/numpy-mgrid-vs-meshgrid/</guid><pubDate>Fri, 30 Oct 2015 05:00:19 GMT</pubDate></item><item><title>Configuring the Namecheap DNS for your Nikola site on Github Pages</title><link>http://louistiao.me/posts/configuring-the-namecheap-dns-for-your-nikola-site-on-github-pages/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;Namecheap overhauled their Account Panel a few weeks ago
(&lt;a class="reference external" href="https://blog.namecheap.com/ready-to-roll-your-new-account-panel/"&gt;https://blog.namecheap.com/ready-to-roll-your-new-account-panel/&lt;/a&gt;).
Nonetheless, the popular guide on &lt;a class="reference external" href="http://davidensinger.com/2013/03/setting-the-dns-for-github-pages-on-namecheap/"&gt;Setting the DNS for GitHub Pages on Namecheap&lt;/a&gt;
is still applicable and the instructions remain practically the same, if not
even simpler now due to the new interface.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://louistiao.me/posts/configuring-the-namecheap-dns-for-your-nikola-site-on-github-pages/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>devops</category><category>dns</category><category>github</category><category>hosting</category><category>namecheap</category><category>nikola</category><guid>http://louistiao.me/posts/configuring-the-namecheap-dns-for-your-nikola-site-on-github-pages/</guid><pubDate>Wed, 07 Oct 2015 11:49:06 GMT</pubDate></item><item><title>Quotes: "One broken window starts the process toward decay"</title><link>http://louistiao.me/posts/quotes-one-broken-window-starts-the-process-toward-decay/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;blockquote class="pull-quote"&gt;
&lt;p&gt;A building with broken windows looks like nobody cares about it. So other
people stop caring. They allow more windows to become broken. Eventually
they actively break them. They despoil the facade with graffiti and allow
garbage to collect. One broken window starts the process toward decay.&lt;/p&gt;
&lt;p class="attribution"&gt;—Robert C. Martin, Clean Code: A Handbook of Agile Software Craftsmanship&lt;/p&gt;
&lt;/blockquote&gt;</description><category>programming</category><category>quotes</category><guid>http://louistiao.me/posts/quotes-one-broken-window-starts-the-process-toward-decay/</guid><pubDate>Thu, 01 Oct 2015 04:15:08 GMT</pubDate></item><item><title>Quotes: "It's harder to read code than to write it"</title><link>http://louistiao.me/posts/quotes-its-harder-to-read-code-than-to-write-it/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;blockquote class="pull-quote"&gt;
&lt;p&gt;We're programmers. Programmers are, in their hearts, architects, and the
first thing they want to do when they get to a site is to bulldoze the place
flat and build something grand. We're not excited by incremental renovation:
tinkering, improving, planting flower beds.&lt;/p&gt;
&lt;p&gt;There's a subtle reason that programmers always want to throw away the code
and start over. The reason is that they think the old code is a mess. And
here is the interesting observation: they are probably wrong. The reason
that they think the old code is a mess is because of a cardinal, fundamental
law of programming:&lt;/p&gt;
&lt;p&gt;It’s harder to read code than to write it.&lt;/p&gt;
&lt;p class="attribution"&gt;—Joel Spolsky, &lt;a class="reference external" href="http://www.joelonsoftware.com/articles/fog0000000069.html"&gt;Things You Should Never Do, Part I&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description><category>programming</category><category>quotes</category><guid>http://louistiao.me/posts/quotes-its-harder-to-read-code-than-to-write-it/</guid><pubDate>Thu, 01 Oct 2015 04:12:35 GMT</pubDate></item><item><title>Creating a Nikola theme with Sass-compiled Bootstrap</title><link>http://louistiao.me/posts/creating-a-nikola-theme-with-sass-compiled-bootstrap/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div class="section" id="initializing-the-theme"&gt;
&lt;h2&gt;Initializing the Theme&lt;/h2&gt;
&lt;p&gt;First, create a new Nikola theme. I prefer to do this by creating a
&lt;a class="reference external" href="https://github.com/new"&gt;new repository on Github&lt;/a&gt; so that it can be initialized with a README,
LICENSE, &lt;tt class="docutils literal"&gt;.gitignore&lt;/tt&gt;, etc. Once that's done, clone the newly created repo
into &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;&amp;lt;site-root&amp;gt;/themes&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://louistiao.me/posts/creating-a-nikola-theme-with-sass-compiled-bootstrap/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>bootstrap</category><category>nikola</category><category>sass</category><guid>http://louistiao.me/posts/creating-a-nikola-theme-with-sass-compiled-bootstrap/</guid><pubDate>Mon, 28 Sep 2015 12:59:54 GMT</pubDate></item><item><title>Installing NLOpt with Python support on Mac OS X (10.10)</title><link>http://louistiao.me/posts/installing-nlopt-with-python-support-on-mac-os-x-1010/</link><dc:creator>Louis Tiao</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a class="reference external" href="http://ab-initio.mit.edu/wiki/index.php/NLopt"&gt;NLOpt&lt;/a&gt; is a popular open-source library for nonlinear optimization. It can be
somewhat tricky to install it with Python support on Mac OS X, especially
isolated under a virtual environment. This article outlines the different ways
of making NLopt play nicely with your Python development environment, whatever
that may be.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://louistiao.me/posts/installing-nlopt-with-python-support-on-mac-os-x-1010/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>homebrew</category><category>nlopt</category><category>optimization</category><category>python</category><category>python3</category><category>virtualenv</category><guid>http://louistiao.me/posts/installing-nlopt-with-python-support-on-mac-os-x-1010/</guid><pubDate>Fri, 17 Jul 2015 05:39:17 GMT</pubDate></item></channel></rss>